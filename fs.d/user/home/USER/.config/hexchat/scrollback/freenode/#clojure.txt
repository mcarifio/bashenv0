T 1589330950 18<clojurebot18>	[false true]
T 1589331138 18<justin_smith18>	, (letfn [(f [] g) (g [] f)] [(= (f) (((f))) (((((f)))))) (= ((f)) ((((f)))) ((((((f))))))) (= f (f))])
T 1589331138 18<clojurebot18>	[true true false]
T 1589331376 18<justin_smith18>	TIL how to do modulo in lambda calculus :D
T 1589332069 18<justin_smith18>	or something like it
T 1589341145 18<amalloy18>	justin_smith: i think that's cheating lambda calculus in a number of ways
T 1589344511 18<Nazral18>	Is there a way to listen to network interfaces ? I would like to make a service that automatically ping other instances of itself on the LAN when it connects to a network
T 1589344529 18<Nazral18>	(e.g. I get home, connect my network to the wifi, i want to automatically sync up stuff with my pi zero)
T 1589367226 18<Nazral18>	Hi
T 1589367251 18<Nazral18>	I'm trying to figure out how to use udp broadcasts in Aleph, https://aleph.io/examples/literate.html#aleph.examples.udp but I can't seem to figure it out
T 1589367296 18<Nazral18>	I can send udp messages to a given host with {:port 1111 :broadcast? true :host "192.168.1.17" :message "hi"}
T 1589367320 18<Nazral18>	but if no host is set or if I use my broadcast address as host (192.168.1.255) nothing happens
T 1589367500 18<Nazral18>	Nevermind, I found it, thanks anyway !
T 1589367791 18<penryu18>	Nazral: what was the secret?
T 1589367961 18<Nazral18>	I needed to declare the socket with broadcast? true, not the message
T 1589368026 18<Nazral18>	now I need to find a way to get my local network broadcast address easily....
T 1589368190 18<Nazral18>	https://gist.github.com/punit-naik/ffaf19392cd1b3887d85a02ff349c906 well here it is
T 1589373436 18<lionrouge18>	how to use clojure.text?
T 1589373441 18<lionrouge18>	*clojure.test
T 1589373458 18<lionrouge18>	should I write tests in the same file and the same namespace as the code under test?
T 1589373500 18<lionrouge18>	examples in the Internet usually use `use. Is there a difference between require and use for clojure.test?
T 1589374375 18<lionrouge18>	looks like I found some answers in standard leiningen template
T 1589376608 18<risorg2318>	Hello everyone, i've been studying clojure for about 1 week and since i have some experience with java i was wondering if it's possible to use clojure as a library in a java project
T 1589376677 18<chujev18>	Hi, it absolutely is
T 1589376744 18<risorg2318>	Are there any guides on how to do this in the official website or anywhere else?
T 1589376781 18<TMA18>	risorg23: sadly, interacting with the clojure parts from java are not as pleasant as the opposite direction
T 1589376834 18<risorg2318>	I figured..
T 1589376862 18<TMA18>	(the amount of boilerplate is much higher in that direction)
T 1589376889 18<chujev18>	not much of a guide, but there's https://clojure.github.io/clojure/javadoc/clojure/java/api/Clojure.html
T 1589376932 18<opqdonut18>	yeah, call Clojure.load on some .clj files, then invoke functions with Clojure.var
T 1589376953 18<risorg2318>	Oh ok that's what i needed actually
T 1589376972 18<risorg2318>	it's kinda dirty not going to lie but gets the job done
T 1589376980 18<opqdonut18>	it's fine
T 1589376988 18<risorg2318>	Yea
T 1589376993 18<opqdonut18>	think of it more as using clojure as a scripting language for your java app
T 1589377077 18<mashd[m]18>	you can do it in a "cleaner" (i.e. more javaesque) way by using deftype and have "proper" java classes i believe. but its boilerplatey
T 1589377109 18<risorg2318>	That's fine actually, if i'm able to load all important functions from clojure and use them through java in an existing project
T 1589377153 18<risorg2318>	Kind of boilerplatey yea, but thinking of it as a scripting language is more appropriate
T 1589377191 18<mashd[m]18>	just be aware there might me trouble if you are using some dynamic class loading framework (e.g. osgi). Anything that messes with classloaders can interfere with clojure i found
T 1589377336 18<risorg2318>	I'm not using anything like that, just some simple java projects i'd written some time ago
T 1589377375 18<risorg2318>	And i thought it would be nice to try to embed some clojure inside to see how this goes
T 1589377425 18<mashd[m]18>	sure, that should work smoothly
T 1589377438 18<risorg2318>	than you very much!
T 1589378723 18<Nazral18>	Do you guys have any TUI library to recommend ?
T 1589379032 18<justin_smith18>	Nazral: the only one I've seen people use is lanterna https://github.com/MultiMUD/clojure-lanterna
T 1589379185 18<Nazral18>	I found it, but it looks dead and unfortunately not finish, I will try it nonetheless, thank you
T 1589379235 18<justin_smith18>	Nazral: I wouldn't be surprised if the clojure-lanterna project just offered constructors, and expected you to use interop for most features
T 1589379283 18<justin_smith18>	if you haven't used interop, it's not as hard as you might think https://clojure.org/reference/java_interop
T 1589379312 18<Nazral18>	I do I do, I had to write bindings for tensorflow-java for work :p
T 1589379408 18<chujev18>	I'm using lanterna and recommend using interop rather than the wrapper library
T 1589379703 18<justin_smith18>	yeah, in my experience using interop tends to introduce less tech debt and complexity than a wrapper (a small number of wrappers like ring are exceptions)
T 1589380343 18<Nazral18>	noted, thank you !
T 1589380498 18<Nazral18>	same advice for java watchservices I imagine ?
T 1589380576 18<chujev18>	I haven't used that, can't say
T 1589385829 18<idanmel_18>	Hey all :-)
T 1589399331 18<mengu18>	hi all, i'm using clojurescript and i have a problem. i have a vector of vectors, ie. [[:a 5], [:b 4], [:c 3], [:d 2], [:e 1]]. i'd like to convert this into a hash-map preserving the order. is that possible? everything i've tried has broken the order.
T 1589399607 18<mengu18>	i already retrieve a sorted data from the backend, i just need to be able to access the data with the keys
T 1589399620 18<justin_smith18>	mengu: there's no such thing as an order preserving hash-map in core
T 1589399640 18<justin_smith18>	there's sorted-map if the ordering you want is the sorting order
T 1589399675 18<justin_smith18>	alternatively you can keep a vector or list of keys for ordering, plus a map for lookup
T 1589399704 18<justin_smith18>	there's at least one insertion ordered immutable hash map available as a lib, I'm not sure if it works in cljs
T 1589399724 18<mengu18>	justin_smith: if that's the ordered lib, nope, it doesn't work with cljs
T 1589399792 18<justin_smith18>	I wonder if a record would be able to preserve map behaviors while overriding order for keys/vals/seq based access
T 1589399931 18<justin_smith18>	,(into (sorted-map) {:b 1 :c 2 :a 0 :d 3})
T 1589399935 18<clojurebot18>	{:a 0, :b 1, :c 2, :d 3}
T 1589400125 18<justin_smith18>	an ArrayMap happens to preserve insertion order, but will readily be replaced on conj with a HashMap and I dont' even now if cljs has ArrayMap
T 1589400188 18<justin_smith18>	it seems cljs.core/array-map does exist
T 1589401303 18<mengu18>	justin_smith: yes, indeed there's ArrayMap in cljs
T 1589401325 18<justin_smith18>	as long as you never use conj or merge or assoc on it, that will work
T 1589401341 18<justin_smith18>	or, more accurately, as long as you never directly use the return values of those functions
T 1589401438 18<mengu18>	i don't need to use conj, merge or assoc, let me give it a try
T 1589401654 18<justin_smith18>	maybe just saying "as long as you dont' add, remove, or change keys" is more precise than attempting to enumerate the basic things that do that :D
T 1589402742 18<ridcully_18>	i always thought its primary size, that switches from arraymap to hashmap?  is this different in cljs?
T 1589402811 18<ridcully_18>	if order is important, you might be just better off keeping the tuple list.  once you take those data and send it as json order most likely is lost again
T 1589403194 18<justin_smith18>	ridcully_: right, that's the implementation detail, but if you explicitly use an array-map it will remain ordered - that's why the warning about modifications whiwhc will risk auto-promotion
T 1589403283 18<justin_smith18>	ridcully_: yeah, keeping as tuple list works, I have also done {::key-seq [:a :b :c :d :e] :a 5 :b 4 ...} or similar
T 1589403853 18<sobel18>	oof.. today in the life of IDEA/Cursive, IDEA couldn't even see the Cursive plugin update was available until i disabled it and restarted the IDE. i miss borland real bad.
T 1589407403 18<mengu18>	thank you very much for the suggestion justin_smith
T 1589407410 18<mengu18>	i've solved my problem with array-map
T 1589407494 18<mengu18>	the data i received from the backend was already a sorted one so i just did (apply array-map (flatten data-from-backend))
T 1589407571 18<justin_smith18>	you could have used `into (array-map) ...` and that would have avoided flatten (there's multiple reasons to not use flatten)
T 1589407639 18<mengu18>	justin_smith: that's what i tried initially however it did not respect the order
T 1589407667 18<justin_smith18>	ahh, into itself probably messes that up...
T 1589407671 18<mengu18>	yes
T 1589407697 18<justin_smith18>	you can use (apply concat data-from-backend) if you want better perf / need it not to work if vals are collections
T 1589407712 18<justin_smith18>	but clearly what you have works
T 1589407713 18<mengu18>	vals are plain integers
T 1589407869 18<justin_smith18>	mengu: in my cljs, flatten takes only 2x as long as concat, but I think the time difference expands with bigger inputs
T 1589407909 18<mengu18>	well
T 1589407918 18<mengu18>	apply concat felt a bit faster than flatten
T 1589407925 18<mengu18>	nothing scientific tho, just felt :D
T 1589407965 18<mengu18>	thanks a lot again justin_smith
T 1589407972 18<justin_smith18>	it's about 2x faster yeah - flatten attempts to do a tree transform, concat is simpler (nto a big deal witha  simple input like yours but it does effect how it can be optimised)
T 1589407979 18<mengu18>	that fixes a huge bug in our dashboard lol
T 1589407996 18<justin_smith18>	nice
T 1589408051 18<justin_smith18>	I dealt with this recently with csv - I wanted maps as input for readability - I ended up using column names (literally the data for the header row) as a seq to map my input across
T 1589408110 18<mengu18>	something like (map (zipmap (first rows) %) rows)?
T 1589408137 18<justin_smith18>	no, because for editing I want the inputs to be maps
T 1589408149 18<justin_smith18>	and for correctness the output has to match the header row
T 1589408155 18<mengu18>	oh, gotcha
T 1589408169 18<mengu18>	are you using reagent / re-frame or something else?
T 1589408189 18<mengu18>	i auto assumed it was a web app
T 1589408213 18<justin_smith18>	reagent
T 1589408232 18<justin_smith18>	with reframe, constructing a csv for upload
T 1589408309 18<mengu18>	i've been using re-frame since 2016
T 1589408317 18<mengu18>	i am never going back to anything else
T 1589408321 18<mengu18>	not even purescript :)
T 1589408355 18<justin_smith18>	,(let [rows [:a :b :c :d]] (into [rows] (map #(mapv % rows)) [{:a 0 :b 1 :c 2 :d 3} {:a "foo" :b "bar" :c " baz" :d "quux"}]))
T 1589408359 18<clojurebot18>	[[:a :b :c :d] [0 1 2 3] ["foo" "bar" " baz" "quux"]]
T 1589408387 18<justin_smith18>	the idea is the header row can also be used to order each map, and the maps can be used as a function across the header row
T 1589408561 18<mengu18>	that is cool
T 1589460969 19*	Now talking on 22#clojure
T 1589460969 22*	Topic for 22#clojure is: Clojure, the language http://clojure.org | Currently at 1.10.0: http://bit.ly/clj-changes | See also #clojure-beginners | Discussion: http://groups.google.com/group/clojure
T 1589460969 22*	Topic for 22#clojure set by 26amalloy!~amalloy@li231-96.members.linode.com (24Tue Dec 18 16:04:33 2018)
T 1589553169 18<hooo18>	hi, please sell me on the idea of clojure. Thank you
T 1589553436 18<Para``18>	hooo: On average, Clojure devs make about 30% more than Java devs
T 1589553446 18<Para``18>	(you didn't give any context so...)
T 1589554458 18<TimMc18>	C is waaaay earlier in the alphabet than J.
T 1589554506 18<TimMc18>	Coincidentally, only 30% as far out.
T 1589554616 18<TimMc18>	hooo: Actual answer: REPL-driven development is an absolute delight, and having immutable data structures at the core makes code a lot safer and easier to reason about.
T 1589554938 18<hooo18>	hm ok, I think the language is too ugly for me
T 1589554958 18<hooo18>	I only got slightly interested becuase somebody mentioned that it isnt OOP oriented
T 1589555034 18<TimMc18>	Have you tried using a nicer font? :-)
T 1589555168 18<TimMc18>	Dim the lights, pull up a nice Andalé Mono, set a dark solarized color palette, turn on some soft jazz...
T 1589555638 18*	nonidentity[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/xbeWtKKvtaIWgSPUPUpZKYgD >
T 1589555683 18*	nonidentity[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/UWoOwBfuAwDChVjMrGiApARK >
T 1589555719 18<nonidentity[m]18>	very readabloe and self-documenting
T 1589562240 18*	nonidentity[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/xgClERRITLWMGaylEaeqaFEv >
T 1589565025 18<TimMc18>	nonidentity[m]: It looks like you keep sending the same long message.
T 1589565046 18<TimMc18>	Are you editing it or something?
T 1589565055 18<luma18>	they're editing it and matrix reposts the entire thing
T 1589565065 18<luma18>	because why wouldn't it
T 1589565272 18<ridcully_18>	the gitter-irc-integration at least prefixes it with [edit]
T 1589566248 18<justin_smith18>	also, the message highlights a user, but the highlighting doesn't translate to the IRC channel
T 1589566271 18<justin_smith18>	no irc client would follow the link and check if your nick was tagged in the text
T 1589567476 18<TimMc18>	justin_smith: Now I'm imagining an IRC bridge where the beginning of the message is sent as usual, but the remainder is packaged up as a t... [To see the remainder of this message, please turn off your adblocker, then go to https://example.com/con82386v2836t2983]
T 1589568844 18<Para``18>	TimMc: include blockchain to that and you've got a startup
T 1589569510 18<justin_smith18>	Para``: you mean some js on the destination URL that mines bitcoin?
T 1589570076 18<Para``18>	Yes.
T 1589570082 18<Para``18>	Or any of those altcoins.
T 1589578400 18<sobel18>	apparently you could distribute that through the Play store
T 1589582618 18<tiodargy18>	hi, i'm new here
T 1589582729 18<bbuccianti18>	hi tiodargy !
T 1589582847 18<sobel18>	welcome
T 1589587131 18<leef`18>	testing 1 2 3
T 1589624921 18<mashd[m]18>	Does anyone know what data transport formats are currently popular? Specifically if edn is used much or if there are some non-obvious problems with it.
T 1589631364 18<Nazral18>	Hi, I've been trying to use graalvm to generate native binaries, I've been using https://github.com/taylorwood/lein-native-image but even with their examples I get main class not found, anybody faced the same problem ?
T 1589636624 18<harrigan18>	mashd[m]: for transport, you might want to look at transit rather than edn
T 1589637214 18<Para``18>	toys for our grandchildren https://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html
T 1589654209 18<justin_smith18>	Para``: that looks very interesting - are you saying it won't be available in a vm we can actually use?
T 1589654392 18<ridcully_18>	erm no
T 1589656595 18<technomancy18>	protobufs are popular
T 1589656605 18<technomancy18>	they're also awful rubbish
T 1589656704 18<ridcully_18>	publish?
T 1589658073 18<justin_smith18>	so if I download the loom jdk-15 "(Thread/startVirtualThread #(println "hi"))" works
T 1589658195 18<mashd[m]18>	I've used protobuf but I have several issues with it. Mainly lack of multidimensional arrays and nested maps.
T 1589658735 18<Para``18>	justin_smith: just a joke about how slow newer versions of JDK are to appear in real life
T 1589729257 18<cantdoart18>	first time trying to use clojure and i'm looking to set up vim+clojure-lsp.  i've cloned a github project to test this out with, but clojure-lsp is giving me an unknown symbol for just about everything in this file: https://github.com/andeemarks/shokunin-august/blob/master/src/shokunin/august.clj.  is this because of the clar.rules macros?
T 1589729261 18<cantdoart18>	clara
T 1589729570 18<ridcully_18>	if you suspect it, why not try it out in a very basic project (e.g. `lein new my-project`) first?
T 1589729677 18<cantdoart18>	ridcully_: thanks.  i'll give that a try first
T 1589729989 18<CrowX-18>	Those of you who have been into clojure for several years now, do you feel the demand for clojure development is growing lately or shrinking?
T 1589730052 18<CrowX-18>	Also, if anyone has any actual data on the subject rather than feelings, that would be prefered
T 1589730115 18<CrowX-18>	For example, this curve scares me a bit, but I have no idea if it paints the right picture of the popularity of the language https://trends.google.com/trends/explore?date=all&geo=US&q=clojure
T 1589730346 18<nanuko18>	i've been out of the clojure scene for about 2 years at this point. kind of miss it. has the community grown in that time?
T 1589730369 18<Para``18>	The community has splintered quite a bit, since everyone decided that IRC is a thing of the past and Slack is the future.
T 1589730382 18<Para``18>	So now there's Slack, Zulip, Clojureverse, this IRC channel, a few discords...
T 1589731668 18<nanuko18>	word, how's the usage industrially?
T 1589732474 18<technomancy18>	we're still hiring for remote Clojure positions https://boards.greenhouse.io/circleci
T 1589732864 18<Para``18>	Clojure is still doing great in Finland.
T 1589733463 18<nanuko18>	oh, what? circleci uses clojure? very cool
T 1589740426 18<meta_learning18>	what do you recommend the most efficient way for me, a 36 year old programmer (professionally only in the last 4 years) with no experience in fp and not much time, but with lots of passion - to learn clojure?
T 1589740825 18<meta_learning18>	anyone?
T 1589740826 18<clojurebot18>	Just a heads up, you're more likely to get some help if you ask the question you really want the answer to, instead of "does anyone ..."
T 1589741972 18<meta_learning18>	?
T 1589742017 18<technomancy18>	meta_learning: the hardest part about learning is finding a good hands-on learning project. it should be something easy enough to be approachable but not so easy it's trivial, and it should be something you're actually interested in accomplishing.
T 1589742050 18<ridcully_18>	there are several books out there.  there i also a free one on the web called clojure for the true and brave
T 1589742100 18<meta_learning18>	that is a nice observation technomancy, thank you.
T 1589742106 18<ridcully_18>	also there is 4clojure, that lets you solve "tests" with clojure and teach a thing or two with the easier tests
T 1589742381 18<meta_learning18>	ridcully_ thank you. I'm aware of everything you mentioned. Did some research. I'm mostly curios about efficiency.
T 1589742483 18<meta_learning18>	which is also one of the reasons i am interested in learning clojure :)
T 1589742544 18<technomancy18>	the only efficient way to learn is to motivate yourself such that you have to learn in order to accomplish a goal you have
T 1589742583 18<technomancy18>	unfortunately that means there is no 1-size-fits-all
T 1589742784 18<meta_learning18>	i agree. what i would really want to accomplish is to eventually program my own set of tools that would make my workflow faster and easier.
T 1589742929 18<meta_learning18>	and more enjoyable.
T 1589744639 18<CrowX-18>	technomancy, what's the salary range of the positions?
T 1589744900 18<technomancy18>	CrowX-: no idea, sorry. none of the positions are on my team, so I'm not involved in the hiring process.
T 1589744936 18<CrowX-18>	technomancy, what's your best guess?
T 1589745037 18<CrowX-18>	I'm just interested what the clojure salaries for real remote positions are like
T 1589746395 18<technomancy18>	CrowX-: I'm guessing starting around 120k but that's totally off the top of my head; I know there is a cost of living adjustment even for remote gigs
T 1589746640 18<CrowX-18>	thanks
T 1589768786 18<Nazral18>	is it possible to write code that will only be used if an optional dependency is available in clojure ?
T 1589801113 19*	Now talking on 22#clojure
T 1589801113 22*	Topic for 22#clojure is: Clojure, the language http://clojure.org | Currently at 1.10.0: http://bit.ly/clj-changes | See also #clojure-beginners | Discussion: http://groups.google.com/group/clojure
T 1589801113 22*	Topic for 22#clojure set by 26amalloy!~amalloy@li231-96.members.linode.com (24Tue Dec 18 16:04:33 2018)
T 1589801389 18<ridcully_18>	since irc can not change the past, your client does the same as e.g. gitters irc bridge does: it resends the changed text as new messages
T 1589801408 18<ridcully_18>	the gitter irc is at least as nice as marking this with an [edit] prefix to the message
T 1589801560 18<nonidentity[m]18>	however the riot frontend does not reflect the same only one message (even if edited).  Well I will have to aware of this
T 1589801591 18<nonidentity[m]18>	Maybe send a note to the Riot folks
T 1589801627 18<nonidentity[m]18>	that was 2 messages ;)
T 1589801670 18<ridcully_18>	because riot/matrix/... can replace a message - irc can't
T 1589801897 18<Evilham18>	FTR that's the same behaviour on matrix clients that don't understand editing of messages, e.g. riot for android, it just shows the message again
T 1589801910 18<Evilham18>	it's a "nice" graceful degradation in the protocol
T 1589802197 18<ridcully_18>	are they marked as edit for less confusion?
T 1589805474 18<Para``18>	Pitäis koodaa muinaista javascriptiä.
T 1589805488 18<Para``18>	Hrm, wrong channel.
T 1589805498 18<Para``18>	Haven't done that for a while. Ah, just minor lamentations about JS in Finnish.
T 1589805515 18<luma18>	muinainen javascript paras :D ja kalja :D
T 1589821244 18<tombert18>	Howdy, I have a bit of a dumb question; I'm looking to write a bit of code that uses the Java RabbitMQ library, one part requires the use of the type DeliveryCallback (https://rabbitmq.github.io/rabbitmq-java-client/api/current/com/rabbitmq/client/DeliverCallback.html).  It says it uses a functional interface, is it possible for me to use a regular
T 1589821244 18<tombert18>	clojure function if that's the case, or do I need to reify something?
T 1589821413 18<ridcully_18>	this is just a marker for interfaces with a single method in it
T 1589821519 18<ridcully_18>	or in other words: yes, you have to reify
T 1589821603 18<tombert18>	Ah, bit of a bummer but not the worst thing in the world
T 1589824925 18<nackjicholson18>	Does anyone know which kubernetes API clojure project is the most active and complete?
T 1589825493 18<nackjicholson18>	If any of them are :)
T 1589848139 18<ADL18>	https://youtu.be/I_wRqCywGVE
T 1589852178 18<ADL18>	https://youtu.be/UDPK9VuY19E
T 1589852179 18<ADL18>	https://youtu.be/UDPK9VuY19E
T 1589890363 18<goodger18>	hmm, the channel topic is 364 days out of date
T 1589890622 18<Para``18>	But has it aged like wine or milk?
T 1589890710 18<Para``18>	Oh, noticed this upcoming change to Clojars because you made me look at topic :) https://groups.google.com/forum/#!topic/clojure/GmAU4XwnRpw
T 1589890744 18<Para``18>	tl;dr use tokens instead of u+p, only tokens allowed past 2020-06-27
T 1589891196 18<goodger18>	I joined to ask if you fellows know of a way to do something in clojure, but I have forgotten what it was...
T 1589891303 18<ridcully_18>	so tomorrow the topic has its birthday
T 1589891442 18<goodger18>	the topic's obsolescence has its birthday on thursday; the topic will then be 520 days old
T 1589894840 18<goodger18>	I remembered!
T 1589896519 18<goodger18>	I notice that graalvm's native-image tool (edited for brevity) ‘statically analyses your application and its dependencies to determine which classes and methods are reachable and used during execution, then passes reachable code to the compiler’
T 1589896556 18<goodger18>	my question is: can anyone point me to a tool that will do that for uberjar building?
T 1589896580 18<goodger18>	like most people's, my uberjars are somewhat chunky
T 1589896726 18<Para``18>	ProGuard probably works for uberjars as well, although haven't tested it with Clojure code.
T 1589896733 18<Para``18>	Clojure uberjars, that is.
T 1589896765 18<Para``18>	Although Clojure may slip into reflection way easier if you're not careful and those parts break up immediately if ProGuarded without specific marker/exclusion lists...
T 1589897982 18<justin_smith18>	goodger: there are many libraries, and even functions within clojure, that are incompatible with grallvm because of late binding
T 1589898020 18<justin_smith18>	there are experiments - eg. babashka which is a limited graalvm clojure
T 1589898044 18<justin_smith18>	in general I wouldn't expect things to work, but if you design around the constraint of using graal it's mostly usable
T 1589898078 18<justin_smith18>	btw this won't make your code that much faster - though it makes a big difference in startup time
T 1589898100 18<goodger18>	I don't want to run my application on graalvm, but to reduce the size of the uberjar I have to upload
T 1589898141 18<justin_smith18>	same principle applies - some classes will break in weird ways because of how they look things up at runtime
T 1589898176 18<justin_smith18>	but if you are willing to play bug whackamole, I guess it could help
T 1589898209 18<justin_smith18>	but clojure in particular does things that make static analysis hard, and it's not the only thing in the java world that does that
T 1589898392 18<goodger18>	as a user of leiningen middleware I'm quite familiar with bug whack-a-mole, but it's not something I particularly enjoy
T 1589898425 18<goodger18>	guess I'll leave it alone, then – thanks for the information
T 1600044734 19*	Now talking on 22#clojure
T 1600044734 22*	Topic for 22#clojure is: Clojure, the language http://clojure.org | Changelog: http://bit.ly/clj-changes | See also #clojure-beginners | Discussion: http://groups.google.com/group/clojure
T 1600044734 22*	Topic for 22#clojure set by 26amalloy!~amalloy@li231-96.members.linode.com (24Sat Jun 13 14:55:54 2020)
T 1600046920 18<georgeOfTheJungl18>	hi all. is there any reason to put the parameters inside of parentheses like this guy does here? https://pastebin.com/HEtSZ3kx Trying to understand why he did it like that.
T 1600047856 18<technomancy18>	georgeOfTheJungl: it only makes sense to do that when you have multiple distinct arg lists for a function. in the case there it shouldn't have the extra parens.
T 1600048096 18<georgeOfTheJungl18>	thanks. speaking of this function though. i cant understand how it works at all.
T 1600048179 18<georgeOfTheJungl18>	so I understand second and drop-while. but the complement and the #{} i have no idea.
T 1600048456 18<georgeOfTheJungl18>	sorry i know thats too non specific
T 1600048479 18<georgeOfTheJungl18>	trying to learn enough about it by searching around to make it more specific
T 1600048791 18<georgeOfTheJungl18>	the problem is usually i would break something into its components to figure out how it works. but (#{12}) doesnt do anything. (complement #{12}) returns weird output. "#object[clojure.core$complement$fn__4611 0x46944ca9 clojure.core$complement$fn__4611@46944ca9]" and i dont get how one could apply THAT output to dropwhile.
T 1600049382 18<ToxicFrog18>	(#{12}) should be an ArityException.
T 1600049421 18<ToxicFrog18>	#{12} is a set, which is also a function -- pass it an argument and it returns the argument if it's in the set and nil otherwise.
T 1600049484 18<ToxicFrog18>	(complement f) takes a function and returns another function that has the opposite truthiness.
T 1600049554 18<ToxicFrog18>	Since sets are also functions, you can pass them to complement, so (complement #{12}) returns a function that returns true if passed anything but 12 and false if passed 12.
T 1600049582 18<ToxicFrog18>	,(let [twelve #{12}] [(twelve 1) (twelve 10) (twelve 12) (twelve 15)])
T 1600049586 18<clojurebot18>	[nil nil 12 nil]
T 1600049594 18<ToxicFrog18>	,(let [twelve (complement #{12})] [(twelve 1) (twelve 10) (twelve 12) (twelve 15)])
T 1600049594 18<clojurebot18>	[true true false true]
T 1600049637 18<ToxicFrog18>	The "weird output" you see is just its best attempt to produce a legible string representation of the function that (complement) constructs.
T 1600049646 18<ToxicFrog18>	georgeOfTheJungl: ^
T 1600049803 18<georgeOfTheJungl18>	im here, im just trying to process all that
T 1600049911 18<georgeOfTheJungl18>	okay i get it. dropwhile will go through and return nil nil nil till it actually finds item in xs then itll return something other than nil and do its dropwhile thing
T 1600049947 18<georgeOfTheJungl18>	or wait, maybe the opposite of all that
T 1600050066 18<georgeOfTheJungl18>	right yea, it would be false, so it makes it true, so that it drops, just basically turning the drop while into a drop not while
T 1600050072 18<georgeOfTheJungl18>	thanks
T 1600050323 18<ToxicFrog18>	yw
T 1600062615 18<ridcully18>	TimMc: s/micro// - but yes.  its an oauth2/oidc/saml provider or broker
T 1600090443 18<TimMc18>	So it can also be a self-contained IdP?
T 1600092742 18<sobel18>	I run Keycloak in lieu of Okta or other Id-aaS
T 1600157482 18<libertyprime18>	hey guys. noob here. just wondering how I can get access to my project's symbols using rebel REPL. demo of what i mean: https://asciinema.org/a/GMDMKQIehVrhXohkcrIA6KkuM
T 1600157752 18<ridcully18>	rebel is an "enhancement" over the existing rebels.  if you are in your repl, it will automatically see your stuff once you require it
T 1600157762 18<ridcully18>	maybe i misunderstand your question?
T 1600157788 18<libertyprime18>	this might be the answer im looking for. i may need to require something. lein repl appears to have automatically done this
T 1600157927 18<libertyprime18>	on this page (https://clojure.org/guides/repl/launching_a_basic_repl), it says If you run lein repl from inside a Leiningen project directory, the library dependencies and source code of the project will be available at the REPL.
T 1600157941 18<libertyprime18>	but this appears to not be the case with rebel
T 1600157978 18<libertyprime18>	this is my first attemped at making a clojure project, so i apologise for my noob question.
T 1600157996 18<libertyprime18>	how would i require my project defined in project.clj
T 1600158361 18<libertyprime18>	i may have an issue with the classpath for rebel. i can't seem to require any libraries i have installed, let alone my own project.
T 1600158373 18<libertyprime18>	this is the error im getting "Could not locate instaparse/core__init.class, instaparse/core.clj or instaparse/core.cljc on classpath."
T 1600158862 18<ridcully18>	the rebel-homepage shows, how to integrate with leiningen
T 1600158907 18<ridcully18>	i was not aware, that rebel could run standalone - so how do you run it if not with leiningen?
T 1600158915 18<ridcully18>	i' assume the clj cli tools?
T 1600158965 18<ridcully18>	those are different from leiningen and need a different config (leiningen can use via a plugin this config afaik)
T 1600159642 18<serafeim18>	do you know why there's a bias towards clj cli tools instead of leiningen ?
T 1600159661 18<serafeim18>	this is a very bad decision imho because these tools *do not work* properly with windows
T 1600159667 18<serafeim18>	on the other hand, lein works perfectly with windows
T 1600160131 18<ridcully18>	i dont use clj so i am not the right person to ask.  my impression is, that it has momentum.  for some facts you see if the clojure polls done every year would give some indication
T 1600160171 18<ridcully18>	also my impressions is, that it caused more havoc with boot than with lein
T 1600162202 18<ksft18>	is it possible that a transaction that modifies a ref only with commute will be retried, so that it's important that it have no side effects?
T 1600168054 18<kasaltie18>	Can i use different namespaces across one file ? - it's only for testing purposes
T 1600168055 18<kasaltie18>	I tried that, but repl (calva) automatically switch to default ns, even if i have loaded my second ns
T 1600168250 18*	kasaltie sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/fnczqgESUeJzMHdVRlngIrIE/message.txt >
T 1600168274 18<serafeim18>	i've tried many times to use the clj tools (in windows of course) but always had many problems
T 1600168300 18<mpenet[m]18>	it's a bit of a yak shave adventure to use clj right now imho
T 1600168317 18<serafeim18>	actually, the fact that for some reason it requires the powershell to work (instead of cmd) is even more worissome. powershell is something that is heavily pushed by microsoft but i don't think that anybody (outside MS) uses it
T 1600168329 18<mpenet[m]18>	lein is just easier to start with, clj will probably replace parts of lein with time, but not right now
T 1600168381 18<serafeim18>	powershell is slower, more difficult and doesn't really offer something when compared to cmd (unless you are a windows administrator by trade)
T 1600168410 18<serafeim18>	mpenet[m]: i agree with the lein. you download a .bat file and you are good to go. using clj ? oh well
T 1600168434 18<ridcully18>	excuse my windows ignorance, but is powershell not installed by default?  so this adds an extra step of hastle?
T 1600168479 18<serafeim18>	ridcully: i'm not really sure that it is installed by default. i think it does at least in some newer windows versions
T 1600168518 18<serafeim18>	but it's not something that people that use windows care about
T 1600168531 18<serafeim18>	i mean people will either use cmd or bash (through WSL)
T 1600168648 18<serafeim18>	what's problematic for me is that some people that are new to clojure will stumble upon this: https://clojure.org/guides/getting_started
T 1600168661 18<serafeim18>	if these people are using windows they will definitely be scared off and won't continue
T 1600168707 18<ridcully18>	there was rant yesterday about this on SO
T 1600168846 18<ridcully18>	kasaltie: i'd expect putting multiple ns in a file and load that in the repl to work - assuming that is what you mean by testing
T 1600168869 18<ridcully18>	i'd never use that -- unless you have really strong reaons -- out there in the wild
T 1600168894 18<ridcully18>	depending on the names you are using, this will most likely result in things not requireable
T 1600168969 18<kasaltie18>	kk so i have to work with different files , i just learn and wanted this lesson in one file , but no big deal at all, thanks for advice
T 1600169073 18<ridcully18>	in the end it will work in the state of your repl/program if used properly
T 1600169106 18<ridcully18>	but i'd not bother especially if you are learning.  creating files with the proper directory structure and names and putting the correct ns in there is way more important to learn
T 1600169119 18<ridcully18>	and most likely your IDE will do all that for you anyway
T 1600169211 18<kasaltie18>	and what's about naming a few files ns'es identically to read data between files, can i do that, or better to :require
T 1600176065 18<oly[m]18>	is there a way todo something like (take 1 (cycle #{1 2 3))) on the first call it will return 1 next time 2 then three on the fourth call it would produce 1 again ?
T 1600176146 18<opqdonut18>	,(let [stream (atom (cycle [1 2 3])) f #(first (swap! stream rest))] [(f) (f) (f) (f) (f)])
T 1600176150 18<clojurebot18>	[2 3 1 2 3]
T 1600176151 18<opqdonut18>	something like that
T 1600176193 18<luma18>	i think the most important question is "why don't you just use the sequence as a sequence"
T 1600176255 18<opqdonut18>	yeah I'd try to figure out a pure solution too
T 1600176313 18<opqdonut18>	you can map over the sequence, or zipmap it with some keys to get a map
T 1600176334 18<luma18>	or zip it with some other sequence
T 1600176364 18<luma18>	oh wait, clojure doesn't have builtin zip. (partial map vector) it with some other sequence
T 1600176466 18<opqdonut18>	:)
T 1600176518 18<oly[m]18>	opqdonut: thanks for the example was hoping for something nicer than using the atom, my only other option is to write some logic to find the current item get the next item or the first if its the end of the list
T 1600176611 18<opqdonut18>	here's another solution
T 1600176668 18<opqdonut18>	,(let [increment (zipmap [1 2 3] (rest (cycle [1 2 3])))] [(increment 1) (increment 2) (increment 3)])
T 1600176669 18<clojurebot18>	[2 3 1]
T 1600203789 18<kasaltie18>	Hello, can i use identical namespace name for a few files, to read some data from file to file ??
T 1600203927 18<kasaltie18>	or is this forbidden ?
T 1600204215 18<Para`18>	I'm going to say no, but not because it is specifically forbidden - at the end each namespace is just a file in specific path and that path+name is decided by the namespace, so if they're run in the same context the last one probably wins and others get overwritten.
T 1600204232 18<Para`18>	(assuming this is outside REPL)
T 1600206607 18<selimcan18>	<kasaltie> or is this forbidden ?
T 1600206615 18<selimcan18>	politburo doesn't approve this
T 1600206799 18<kasaltie18>	selimcan:  thanks for alert
T 1600213510 18<markmarkmark18>	,(let [s (cycle [1 2 3]) iter (.iterator s) f #(.next iter)] (repeatedly 10 f))
T 1600213514 18<clojurebot18>	(1 2 3 1 2 ...)
T 1600214352 18<justin_smith18>	Para`: the namespace doesn't have to map from the path, you can use eg. load-file instead, the real question is if special casing things like this is worth the extra complexity. real world example: clojure.pprint is split into multiple files
T 1600214441 18<justin_smith18>	kasaltie: you can have N namespaces n one file, or N files for one namespace, but all the convenient operations (and the way all normal clojure devs operate day to day) assume a 1:1 relation where the path to the file determines the ns and visa-versa
T 1600214489 18<technomancy18>	if I was doing code review and someone had multiple files per namespace, it would not pass review
T 1600218422 18<jeaye18>	Same.
T 1600234829 18<ridcully18>	kasaltie: the rules are the same with multiple ns in one file - do you want to do this to load those files manually in a repl?  yes you can do it - should you?  once you want to require things this will most likely lead to anger and tears
T 1600258641 18<mpenet[m]18>	I think I know of only one project doing this in the wild (outside of clojure itself) https://github.com/FundingCircle/jackdaw/blob/master/src/jackdaw/data.clj#L87-L92. Not a fan of that approach it gets hairy quick
T 1600265009 18<sobel18>	what is the benefit of that approach?
T 1600265054 18<sobel18>	i'm fair-to-middling on packaging java but so far my clojure bundling skills amount to your choice of uberjar or lib/*.jar and a launcher script
T 1600265075 18<sobel18>	...and a static initializer can spoil the whole uberjar
T 1600269812 18<justin_smith18>	mpenet[m]: the main issue is that I go to the jackdaw.data file "jackdaw/data.clj" and don't find something because its actually sourced from jackdaw/data/common.clj
T 1600269830 18<justin_smith18>	I guess the metadata on the var should still give the right location
T 1600269838 18<justin_smith18>	but my usual intuition is less useful
T 1600269879 18<Para`18>	wow, now that's a curious name to see...
T 1600269911 18<Para`18>	What the hell :D
T 1600269914 18<justin_smith18>	Para`: I worked on jackdaw while I was at funding circle, the company had a pretty meme-happy culture
T 1600269936 18<Para`18>	Jackdaw _was_ the name of _my_ Kafka library I built back in the day :D It was Java based but still...
T 1600269941 18<justin_smith18>	oh
T 1600269974 18<justin_smith18>	that's funny, the fc name was a reference to the whole unidan thing on reddit ...
T 1600269984 18<ToxicFrog18>	What's memey about corvids?
T 1600269987 18<Para`18>	So I used to work at Rovio (Angry Birds) in their cloud services and all our libraries had to be named after birds, so I picked that... :)
T 1600269998 18<Para`18>	This was like 5 years ago.
T 1600270082 18<TimMc18>	ToxicFrog: Someone on reddit wrote a long rant about jackdaws not being the same thing as crows, and it became a copy-pasta.
T 1600270276 18<justin_smith18>	also significant, it was the moment someone that "everybody loved" turned into a weirdo kook in terms of reputation
T 1600270289 18<ToxicFrog18>	Aah.
T 1600270306 18<justin_smith18>	their posts went from getting hundreds of upvotes to being controversial, without the tone or content changing
T 1600270331 18<justin_smith18>	thanks ot one wacky rant about identifying birds (their reputation was based on being an animal expert)
T 1600270353 18<justin_smith18>	that's more detail than we need here, but for anyone adjacent, just mentioning jackdaws was a punchline for years afterward
T 1600270362 18<justin_smith18>	and now it's basically a dad joke
T 1600270489 18<ToxicFrog18>	Huh. Weird.
T 1600270501 18<ToxicFrog18>	(Especially since they're right, jackdaws aren't crows)
T 1600270540 18<justin_smith18>	ToxicFrog: like most internet forum drama, the tone / emotion is remembered and the facts are all arbitrary nonsense
T 1600270644 18<justin_smith18>	the blaseball phenomenon on twitter does a great job of capturing this, while insulating it all in a layer of absurd harmless nonsense (nobody is going to "dox" jessica telephone or jaylen hotdogfingers, they are just fun invented personalities to make jokes around)
T 1600270677 18<justin_smith18>	also the whole blaseball thing has a code of conduct where it doesn't do hate speech etc.
T 1600270723 18<justin_smith18>	I really hope someone makes a zsh extension around the concept of jessica telephone being trapped in your os shell
T 1600270870 18<TimMc18>	ToxicFrog: What cemented it was that Unidan was later banned for vote-farming, completing their transformation from well-loved expert to celebrity burnout. All stupid shit.
T 1600271024 18<justin_smith18>	yeah, typical forum drama nonsense
T 1600271041 18<justin_smith18>	the "vote farming" was two accounts voting on the same post lol
T 1600308493 18<arbol18>	Hi I'm trying to get into LISP but can't wrap my head around how to edit my programs. I tried learning Clojure and using Calva for VS Code to edit but the barf/slurp stuff didn't make sense to me and it sucked feeling like I had to throw away all of my Vim muscle memory. Any advice? And is there a book that explains the editing style for lisps? I have Getting Clojure and Joy of Clojure but didn't make it far into them yet after I stumbled with the edi
T 1600308493 18<arbol18>	ting experience, although I did finish a few programming exercises on Exercism
T 1600308890 18<shinzo18>	why didn't you use vim?
T 1600308947 18<arbol18>	Seemed like Calva was the "blessed" way to do it in VS Code, and I wanted auto complete and such. The full IDE experience
T 1600308961 18<technomancy18>	arbol: you don't need to learn paredit stuff right off the bat
T 1600308978 18<technomancy18>	turn it back on once you've learned the basics
T 1600309157 18<shinzo18>	yep, forget all that fancy stuff when starting, vim has built-in syntax support
T 1600309186 18<technomancy18>	(with the caveat that being able to run code in a repl is not fancy but rather fundamental)
T 1600309200 18<arbol18>	I'm just using Vim mode for VS Code, I don't program in vim itself. But Vim isn't compatible with Calva
T 1600309285 18<shinzo18>	arbol: vim-fireplace, vim-sexp(with vim-sexp-for-regular-people) is a good base
T 1600309350 18<shinzo18>	technomancy: I wouldn't call it fundamental since it's not a requirement
T 1600309363 18<technomancy18>	agree to disagree
T 1600309380 18<technomancy18>	nothing is a requirement; you can edit in ed if you like pain
T 1600309414 18<shinzo18>	that's another level of pain :P
T 1600309419 18<technomancy18>	eh
T 1600309425 18<technomancy18>	developing without a repl is pretty miserable
T 1600309435 18<technomancy18>	roughly equivalent to using ed IMO
T 1600309505 18<shinzo18>	clojure's startup does make it more painful
T 1600309509 18<shinzo18>	+time
T 1600309570 18<arbol18>	shinzo: Thanks those plugins look promising!
T 1600309577 18<penryu18>	[knee-jerk]vim + conjure + coc get me everything I cared about in vscode/calva (but with a more accurate "vim" experience)
T 1600309644 18<shinzo18>	technomancy: are you referring to lisps/clojure specifically or programming languages in general?
T 1600309689 18<penryu18>	and vim-sandwich is more vim-feeling than paredit.vim, but they coexist happily
T 1600309707 18<penryu18>	conjure specifically is the repl piece
T 1600309811 18<penryu18>	downside is the same as vim-fireplace and cider: setup is non-trivial :-/
T 1600309966 18<selimcan18>	arbol, install drracket :D
T 1600310013 18*	selimcan hides in the corner
T 1600310211 18<selimcan18>	or maybe nightmod if you insist on clojure
T 1600310702 18<arbol18>	When professional Clojure programmers are working with multiple languages do they typically switch styles between languages. For example a Paredit style for Clojure, then Vim or "regular" style for JavaScript/C++ ?
T 1600310744 18<arbol18>	Sorry I meant to say, do they switch between editing styles as they switch between languages during the day
T 1600312075 18<arbol18>	I wrote all your suggestions down to check out. Thanks everyone!
T 1600315435 18<technomancy18>	shinzo: programming in general
T 1600320124 18<serafeim18>	hello friends
T 1600335348 18<v3ga18>	so ring vs pedestal.  Is pedestal completely different or is ring baked in to it?
T 1600335360 18<v3ga18>	Is it build off of ring rather.
T 1600335503 18<ridcully18>	v3ga: pedestal uses ring (and things that lookalike) internally
T 1600335557 18<ridcully18>	pedestal is a server with things added already for you.  ring basically is just the "protocol" used to speak to the web
T 1600335563 18<ridcully18>	(in naive words...)
T 1600335587 18<ridcully18>	e.g. like sql and postgresl (ring and pedestal)
T 1600335634 18<v3ga18>	ridcully: ahh see...thats what confuses me when we call pedestal a server...yet naturally we plug jetty or http-kit in.
T 1600335659 18<v3ga18>	I think that's my real issue.  i've been trying to draw clear lines...because they seem to blend with these libraries.
T 1600335794 18<v3ga18>	Hmm ok so pedestal is more of a genuine framework, full package deal...but if you'd like you can swap their inteceptor pattern for reitits. I guess it just felt like jetty would be the server...and I viewed pedestals as simply routing...yet from there it got blurry
T 1600335990 18<Para`18>	ring is literally just a specification, https://github.com/ring-clojure/ring/blob/master/SPEC :)
T 1600340733 18<mpenet[m]18>	about not using pedestal interceptor with pedestal makes sense, it's basically just using jetty. You can swap the router maybe (pedestal.route I think) but that sounds also like a pain to do for not much gain. There are a number of interceptor libraries and routing lib that you can compose and use with whatever server adaptor you'd prefer
T 1600340770 18<mpenet[m]18>	forgot a negation: not using pedestal interceptor with pedestal makes little sense
T 1600340786 18<goodger18>	pedestal looks like it might be pretty good, I wish it were acceptably documented
T 1600340799 18<mpenet[m]18>	some people like it
T 1600340814 18<Para`18>	I hate the "just read the source to understand how to use the library" mentality...
T 1600340826 18<Para`18>	Pedestal is probably a good start, though.
T 1600340848 18<goodger18>	I strongly suspect it is a ‘ask your cognitect rep for an estimate on telling you how to use the library’ mentality
T 1600340851 18<Para`18>	It's not that hard to compose your omakase web framework either, but maybe that's not what you're being paid to do... :)
T 1600340857 18<mpenet[m]18>	personally I prefer to use jetty + exoscale.interceptor + bidi, it's simple and works
T 1600340915 18<mpenet[m]18>	vertx has also a very nice http server, but it's more involved to work with
T 1600340919 18<Para`18>	I'm currently using aleph (was easy to set up) with reitit (its docs are long but incomplete) and clojure.spec (my first serious dip into it, I really dislike it so far) and it was maybe an hour of just getting the basics working.
T 1600340921 18<mpenet[m]18>	depends on use case
T 1600340968 18<mpenet[m]18>	about spec : imho it takes a bit of effort to grok the approach, but personally it's the one I prefer out of the current trendy spec like libs
T 1600340982 18<Para`18>	I've used bidi before, I like it as well. Apparently it doesn't perform well, but dev experience wins reitit... :) Although I had to make a lot of custom middleware for it last time I dabbled with that stuff.
T 1600340993 18<mpenet[m]18>	yeah, but when is routing your bottleneck
T 1600340995 18<mpenet[m]18>	?
T 1600341010 18<Para`18>	I'm sure it is for some.
T 1600341013 18<mpenet[m]18>	unless you write a proxy that's never an issue
T 1600341020 18<Para`18>	Yeah :)
T 1600341026 18<mpenet[m]18>	I've had jetty + bidi handle crazy loads at past job
T 1600341054 18<Para`18>	reitit has at least in theory a lot of other great niceties, like how the middleware chains can be composed and all that sort of crazy stuff but I'm too new into its usage to actually evaluate whether it's practically useful or not
T 1600341161 18<mpenet[m]18>	yeah but it's just middlewares, you throw in any interceptor lib and you can do the same with any stack, the nice thing is reitit one of the routing algo (same used by pedestal), then the rest is nice to have but imho shouldn't be part of a "routing" library
T 1600341566 18<Para`18>	yeah, there's some cross pollination going there
T 1600341597 18<Para`18>	And tbh some of reitit's internals apparently cause it to be kind of hard for eg. generating rich swagger specs (I at least haven't figured out how to add a doctring to query param yet)
T 1600344033 18<sobel18>	reading the last couple hours' worth, i'm reminded that clojure is not like other languages. you don't see such natural component sharing across libraries that didn't collaborate at a high level
T 1600344071 18<sobel18>	(web servers vs server development libraries vs routers/handlers/generators
T 1600344072 18<sobel18>	)
T 1600344143 18<sobel18>	i guess it sticks out to me, as i recently trialed web servers on the basis of their pac4j adapter.
T 1600344216 18<sobel18>	the exact day i got my vertx integration authenticating with keycloak, the pac4j team released their updated Undertow adapter
T 1600344273 18<sobel18>	and the developer who convinced my Java would be more maintainable by "the next guy in my shoes" went on sabbatical
T 1600347977 18<mpenet[m]18>	the nature of the language makes that easy, most of it is just some maps passed around. Not easy when you have a SomeFrameworkRequest SomeFrameworkResponse and no shared interface between libraries. It's changing a bit in the java world but it clunky
T 1600354140 18<sobel18>	^bingo
T 1600354172 18<sobel18>	the distance between idea and implementation is so short
T 1600354200 18<sobel18>	at least vertx is fast
T 1600354230 18<sobel18>	(not that clojure is slow, but i recall tomcat and friends being a liability during my java4-java8 days)
T 1600354304 18<ridcully18>	i'd assume that is no longer the case for your non-facebook-level cases.  they all use native libs and netty and whatnot under the hood anyway
T 1600354337 18<ridcully18>	tomcat and friends is just pinned to the servlet stuff, which might not be the most "modern" approach nowadays
T 1600354451 18<sobel18>	i did notice all the modern candidates i tried had netty under the hood
T 1600354476 18<sobel18>	vertx, undertow, and i think jetty was shortlisted too but i didn't get to it
T 1600355589 18<Para`18>	undertow isn't netty exactly though, unless it's changed?
T 1600355616 18<Para`18>	afaik it was sort of "just the http parts" of netty since netty is like "anything that goes through network cables"
T 1600356984 18<mpenet[m]18>	Vertx is a thin layer over netty nowadays
T 1600369414 18<kasaltie18>	Hello, do you use require in -main or other created functions ? , can i do this as clojure programmer ? I mean, do i have to require everything globally
T 1600369507 18<ridcully18>	you usually require things in the ns where your -main is located.  then you can use the things there
T 1600369534 18<ridcully18>	main usually is very isolated and small anyway
T 1600369802 18<kasaltie18>	yes i know but can i require in self-created function like circle area (i mean PI), or rather globally
T 1600369903 18<ridcully18>	you can require where you want... the question is: should you
T 1600369919 18<jeaye18>	You should keep your requires in your ns macro. You don't need to :refer or :use anything, though; you can use :as to alias the ns or refer to it by its full name.
T 1600369920 18<ridcully18>	and i am totally lost on the circle/π metaphor
T 1600370008 18<kasaltie18>	@jea
T 1600370329 18<kasaltie18>	jeaye:  ridcully  thanks, thats all i wanted to know, require is easy, but there are some choices, and i wanted to know where use :require in ns and where normal require.
T 1600372336 18<kasaltie18>	the best way is the easiest way 😆
T 1600372448 18<ridcully18>	simple made easy
T 1600436625 18<libertyprime18>	`/quit
T 1600444520 18<sobel18>	bah. i have pretty much figured out everything i need with vertx but pac4j is still giving me trouble with bearer token auth
T 1600444554 18<sobel18>	got web login with a public client, server auth with a confidential client
T 1600444564 18<sobel18>	i think. should probably verify that.
T 1600444680 18<sobel18>	s/confidential/bearer only
T 1600596075 18*	oly[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/LhdjtcxpAAOiqpOeSOtcUrol/message.txt >
T 1600596126 18<oly[m]18>	I have this currently, which generates but I am looking for a way to check a string against the set of chars instead of doing a regex is there a nice way or is a custom function the way to go ?
T 1600596302 18<oly[m]18>	I forgot the character list
T 1600596302 18<oly[m]18>	```` (s/def :mx/chars (set "abcdefghijklmnopqrstuvwxyz0123456789._=-/"))
T 1600596330 18<oly[m]18>	````
T 1600596330 18<oly[m]18>	(s/def :mx/chars (set "abcdefghijklmnopqrstuvwxyz0123456789._=-/"))
T 1600596330 18<oly[m]18>	````
T 1600604264 18<kasaltie18>	Hi guys, I was reading about truthness of all data, except false + nil, but
T 1600604285 18<kasaltie18>	'(true? (seq [1 2 3]))
T 1600604321 18<kasaltie18>	`(true? (seq [1 2 3]))
T 1600604335 18<chujev18>	,(true? (seq [1 2 3]))
T 1600604340 18<clojurebot18>	false
T 1600604348 18<chujev18>	,(doc clojure.core/true?)
T 1600604348 18<clojurebot18>	"([x]); Returns true if x is the value true, false otherwise."
T 1600604361 18<chujev18>	,(boolean (seq [1 2 3]))
T 1600604361 18<clojurebot18>	true
T 1600604405 18<chujev18>	the seq is truthy but not true itself
T 1600604522 18<kasaltie18>	chujev: Ohhh, so i have to check this with boolean
T 1600604598 18<kasaltie18>	,(or (boolean false) (boolean nil))
T 1600604599 18<clojurebot18>	false
T 1600604620 18<kasaltie18>	got this, thanks
T 1600604622 18<chujev18>	if you want to see the "truthiness" you can use boolean (but really everything except nil and false is truthy), in normal code you usually don't need to explicitly cast to boolean
T 1600604699 18<sobel18>	i used to grump about truthiness, but it's the right shortcut for "usable" when i don't actually mean boolean true
T 1609963181 19*	Now talking on 22#clojure
T 1609963181 22*	Topic for 22#clojure is: Clojure, the language http://clojure.org | Changelog: http://bit.ly/clj-changes | See also #clojure-beginners | Discussion: http://groups.google.com/group/clojure
T 1609963181 22*	Topic for 22#clojure set by 26amalloy!~amalloy@li231-96.members.linode.com (24Sat Jun 13 14:55:54 2020)
T 1609964291 18<sobel18>	(oops, that one was meant for another channel, but pls enjoy nonetheless)
T 1609964977 18<oly[m]18>	Is there a hiccup library for clojurescript that's not tied to react ?
T 1609965228 18<Para`18>	oly[m]: https://github.com/ibdknox/crate https://github.com/teropa/hiccups
T 1609965324 18<oly[m]18>	cheers, any experience with either of them ?
T 1609965368 18<Para`18>	nah
T 1609965381 18<Para`18>	hiccups has some decent reasonings on the differences in its readme
T 1609965406 18<oly[m]18>	okay I will experiment a bit :)
T 1609965413 18<Para`18>	And one could always go to the original at https://github.com/weavejester/hiccup and adapt/copy from there
T 1609965456 18<oly[m]18>	I was attempting to use that, but it does not mention clojurescript so figured it was clojure only
T 1609965475 18<oly[m]18>	writing some code to work in both
T 1609966206 18<shem18>	Para`: walmarts are too far but Hankkija might be able to produce a spherical cow. tuskin kuitenkaan kovin häävi lypsäjä.
T 1609966260 18<Para`18>	shem: Oiskohan Kärkkäinen Suomen Walmart :)
