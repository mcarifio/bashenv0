T 1600566982 18<laertus18>	if i have a list of strings foo, then i can check to see if string bar is one of the strings in foo by "if bar in foo: ..."   --  is there a way to do this in a case-insensitive way?
T 1600567018 18<[Tritium]18>	laertus: if bar.casefold() in (f.casefold() for f in foo):
T 1600567019 18<_habnabit18>	laertus, casefolded = {s.casefold() for s in yourstrings}; if needle.casefold() in casefolded:
T 1600567053 18<_habnabit18>	laertus, if this is something you check more than once or often, you probably want to keep it as that set instead of a list at all
T 1600567066 18<laertus18>	thank you, that's very helpful
T 1600567112 18<audioburn18>	_habnabit: can you help me?
T 1600567121 18<_habnabit18>	audioburn, i'm googling for you h/o
T 1600567127 18<audioburn18>	ok thanks
T 1600567180 18<_habnabit18>	audioburn, looks like you can just `x = SubmitField('Whatever label'); y = SubmitField('Whatever other label')`
T 1600567292 18<audioburn18>	_habnabit: that doesn't change the id
T 1600567302 18<_habnabit18>	audioburn, why does the id matter?
T 1600567326 18<audioburn18>	_habnabit: there are two submit buttons with the same id. i need to differentiate one from the other
T 1600567342 18<_habnabit18>	audioburn, i mean.. doesn't what i said above already do that?
T 1600567346 18<audioburn18>	NO
T 1600567352 18<audioburn18>	I already tried it
T 1600567371 18<[Tritium]18>	Does http even transmit which submit button was clicked?
T 1600567376 18<_habnabit18>	[Tritium], yes
T 1600567380 18<[Tritium]18>	mm
T 1600567388 18<_habnabit18>	(but it has nothing to do with a field's id)
T 1600567513 18<audioburn18>	_habnabit: nevermind, I found a workaround
T 1600567518 18<audioburn18>	thanks though
T 1600567524 18<_habnabit18>	audioburn, what did you do?
T 1600567560 18<dale18>	audioburn: Do you have two SubmitFields with the same "name" or something?
T 1600567573 18<audioburn18>	_habnabit: turns out i can create a data attribute in the templating
T 1600567744 18<raxor2k18>	altendky: how can i use lock on the second function so it does not start before the first function is finshed? https://bpa.st/VPDA
T 1600567759 18<altendky18>	raxor2k: it already doesn't
T 1600567789 18<raxor2k18>	altendky: lol? why?
T 1600567808 18<altendky18>	raxor2k: because you await the first batch before launching and awaiting the second batch
T 1600567837 18<raxor2k18>	altendky: surely asyncio cant be that simple ?
T 1600567850 18<altendky18>	raxor2k: of course not.  but the code there does what you requested
T 1600567871 18<raxor2k18>	altendky: ok.. then i need to find a new challenge
T 1600567950 18<[Tritium]18>	for order of operations within a single coroutine, just squint hard until async and await disappear... inside that single function you can safely think of it as mostly serial (this does not hold when thinking about the entire program, obviously)
T 1600567971 18<[Tritium]18>	line 17 will always finish before line 18 is executed
T 1600568043 18<altendky18>	but line 17 may launch tasks running in the 'background', and they started with that so...
T 1600568075 18<[Tritium]18>	mm
T 1600568388 18<_habnabit18>	audioburn, works4me https://gist.github.com/habnabit/0e482241b85f79e78c19910882f1832f#file-main-py-L15-L16
T 1600568706 18<raxor2k18>	altendky: so if my code works, what is the point with lock and queue then ?
T 1600568712 18<raxor2k18>	i thought i needed one of those
T 1600568771 18<altendky18>	raxor2k: often you would have multiple steps and you might feed your jobs into a queue and pull them out one at a time up to your concurrency limit, then as they complete feed the results into another queue that is processed by another 'pool' of workers doing some secondary activity with their own concurrency limit, etc.
T 1600568815 18<raxor2k18>	altendky: ok thanks for info
T 1600568860 18<_habnabit18>	raxor2k, you'd use a lock if you had some resource that didn't support concurrent use/access so you needed to serialize anything that wanted to access it. then the rest of your program can run concurrently without issue
T 1600568909 18<altendky18>	raxor2k: for what it's worth, i would default to using trio instead of asyncio.  it ends up encouraging some better practices.  though sure, it also doesn't have as big a community as asyncio.
T 1600568919 18<_habnabit18>	trio is much, much better
T 1600569044 18<altendky18>	even with a non-concurrent resource you might just queue up the jobs and have only a single worker task handling them.  kind of depends.
T 1600569497 18<raxor2k18>	oh.. another one of those " i recommend this instead of this"
T 1600569530 18<raxor2k18>	Ive heard about trio and also threading, but i think i just go on with asyncio..
T 1600569570 18<_habnabit18>	trio is pretty much asyncio but with a design in mind from the onset instead of cobbled together
T 1600569653 18<raxor2k18>	habnabit: ye i see.  I will read more about trio and then make a decision. why not just learn both ?
T 1600569689 18<altendky18>	raxor2k: go for it.
T 1600569712 18<altendky18>	Other than the regular reasons learning two things is more work
T 1600569718 18<raxor2k18>	this is the same as the question i made earlier "websocket or mqtt?"
T 1600569720 18<altendky18>	But sure, there's also value
T 1600569729 18<raxor2k18>	its very confusing and disturbing when you get several suggestions
T 1600569763 18<altendky18>	raxor2k: you seem maybe annoyed I mentioned another option?
T 1600569797 18<_habnabit18>	raxor2k, why not learn both? because asyncio takes more effort to learn and has more parts that are inconsistent or redundant or just confusing
T 1600569836 18<_habnabit18>	raxor2k, they're similar, sure, but asyncio's last 10% is way worse than trio's
T 1600569841 18<raxor2k18>	habnabit: it its inconsistent, why is it so popularthen ?
T 1600569851 18<raxor2k18>	asyncio seem to be most popular concurrency lib
T 1600569851 18<_habnabit18>	raxor2k, _is_ it popular?
T 1600569852 18<[Tritium]18>	stdlib
T 1600569866 18<raxor2k18>	habnabit: yes it seems like that
T 1600569872 18<[Tritium]18>	its not as popular as trio >in this channel<
T 1600569874 18<_habnabit18>	raxor2k, what are you basing 'seems like' on?
T 1600569876 18<raxor2k18>	everytime i google something it seems to have some asyncio inside it
T 1600569924 18<altendky18>	raxor2k: stdlib as mentioned, also the name is basically exactly async io
T 1600569932 18<altendky18>	Also it is older
T 1600569955 18<_habnabit18>	not older than twisted or tornado
T 1600569955 18<altendky18>	raxor2k: but I did mention the cost of the smaller trio community
T 1600569963 18<altendky18>	Sure
T 1600569966 18<raxor2k18>	altendky: yes
T 1600570145 18<raxor2k18>	I think we all have a luxury problem in this python world
T 1600570179 18<_habnabit18>	raxor2k, what is that
T 1600570296 18<mroe18>	too many objects not enough shelf space?
T 1600570382 18<raxor2k18>	habnabit: instead of not having any libraries to choose, we have plenty we can choose between. Thats a luxury problem
T 1600570389 18<raxor2k18>	we are not restricted to a specific library
T 1600570398 18<_habnabit18>	raxor2k, what part of that is the problem?
T 1600570415 18<mroe18>	don't all languages that have existed for more than a week have the same "problem"?
T 1600570784 18<Hail_Satan18>	no
T 1600570800 18<Hail_Satan18>	there are very few nim modules
T 1600571059 18*	aypea[1] quietly wishes official python docs came up higher in the search results.
T 1600571157 18<[Tritium]18>	aypea[1]: they are usually the first 2 for me.  You need to train google that docs.python.org is what you want (theres nothing the docs team to can really do, google thinks its showing you what you want to see)
T 1600571213 18<aypea[1]18>	i know. ddg is not doing any better than google it seems.
T 1600572042 18<mroe18>	So this is cool.  I have N classes all inheriting from the same abstract class 'Module'.  And I'm able to instantiate all subclasses and collect their outputs:  https://bpa.st/G4ZA
T 1600572053 18<jsoft18>	I've a python project here, It looks like sort of 'Makefile' equivilent of a python project. It has newegg stuff in there, a setup.py, etc. How am I supposed to make it?
T 1600572073 18<_habnabit18>	jsoft, a project you didn't write?
T 1600572081 18<jsoft18>	_habnabit, yeah
T 1600572098 18<jsoft18>	https://github.com/florisla/stm32loader
T 1600572136 18<_habnabit18>	jsoft, looks like it's already on pypi, so all you need to do is `pip install stm32loader`
T 1600572140 18<_habnabit18>	jsoft, in a venv
T 1600572165 18<jsoft18>	oh
T 1600572210 18<jsoft18>	Yes that worked
T 1600572211 18<jsoft18>	Thanks
T 1600572432 18<dassouki18>	what would be the fastest way to achieve this? should i use numpy ? i have a few hundred of these dicts https://bpa.st/W5UQ
T 1600572480 18<raxor2k18>	dassouki: whenever possible, always use numpy
T 1600572491 18<ammar218>	what no
T 1600572511 18<ammar218>	depends on what you're doing
T 1600572531 18<ammar218>	dassouki: what sort of interpolation method are you looking for
T 1600572533 18<dassouki18>	basically, trying to put the data in the paste file into a pandas series 0-<30 while filling the middle values
T 1600572543 18<dassouki18>	just the regular geometric
T 1600572603 18<jsoft18>	_habnabit, how would I 'compile' that thing ?
T 1600572620 18<_habnabit18>	jsoft, what would that mean?
T 1600572630 18<dassouki18>	ammar2: ^^ sorry forgot to tag you
T 1600572719 18<jsoft18>	_habnabit, I want to make changes to it, and test them
T 1600572745 18<_habnabit18>	jsoft, you can do `pip install -e .` from a git checkout
T 1600573435 18<raxor2k18>	why on earth does not "pip install paho-mqtt" work on my computer(win 10)? https://pypi.org/project/paho-mqtt/
T 1600573451 18<_habnabit18>	raxor2k, in what way does it "not work"?
T 1600573527 18<raxor2k18>	habnabit: https://bpa.st/FX2Q
T 1600573761 18<hop18>	try upgrading pip and setuptools
T 1600573911 18<raxor2k18>	hop: IT WORKED! thanks!!¨
T 1600573948 18<hop18>	raxor2k: it's what the error message told you ;)
T 1600576496 18<dassouki18>	so i've simplified my problem to a = {0:10, 5:57, 10:89, 40:98} .. i'd like to interpolate for let's say x = 18. what's the ideal way of doing it?
T 1600576732 18<dassouki18>	solved it!
T 1600576821 18<raxor2k18>	dassouki: great!
T 1600577089 18<dassouki18>	what's wrong with this value = max(list(hci_data.keys())) if value > max(list(hci_data.keys()))
T 1600577129 18<_habnabit18>	dassouki, what is the if supposed to evaluate to if it's false?
T 1600577157 18<dassouki18>	user enters value = 4 but highest key is 30, it should return 4, if users enters 400, it should return 30
T 1600577209 18<_habnabit18>	dassouki, maybe you meant `value = min(value, max(list(hci_data.keys()))` ?
T 1600577221 18<dassouki18>	yes! that works to
T 1600577242 18<dassouki18>	_habnabit: i thought i could do it with an if in the middle ..
T 1600577250 18<_habnabit18>	dassouki, you can't write `x = y if z` in python. it has to be `if z: x = y`
T 1600577278 18<_habnabit18>	dassouki, you can write `x if y else z` as an expression but you can't omit the else
T 1600577328 18<dassouki18>	ok thanks
T 1600577335 18<dassouki18>	understood
T 1600578168 18<jackiiilong18>	if telent get refused by a port ,does that mean that port is not listening on ?
T 1600578308 18<amosbird18>	Hello, any altair users?
T 1600578315 18<amosbird18>	hmm
T 1600578447 18<_habnabit18>	jackiiilong, not really a python question, but usually, yes
T 1600578485 18<_habnabit18>	jackiiilong, it's possible that something is filtering the port, on their end, or by your ISP
T 1600579211 18<dassouki18>	is there a more pythonic way to do this: for i in list(settings['hci'].keys()): my_list.append(i)
T 1600579380 18<_habnabit18>	dassouki, my_list = list(settings['hci'])
T 1600579807 18<dassouki18>	thanks
T 1600580208 18<mogad0n18>	this is sorta stupid but i can't do this can i https://bpa.st/ALHQ
T 1600580235 18<mogad0n18>	Line 9 and 15
T 1600580303 18<mogad0n18>	it will pass the value it wont remember the variable name will it
T 1600580311 18<matsaman18>	easily tested
T 1600580351 18<mogad0n18>	hmm
T 1600580353 18<mogad0n18>	fair
T 1600580377 18<mogad0n18>	Im tired of learning using this trial and error all the time
T 1600580426 18<_habnabit18>	mogad0n, no, _add won't have any variable 'text' in it
T 1600580547 18<mogad0n18>	yeah thanks :/ Ill take a break and find a different way for _add to differentiate between two functions calling it
T 1600580601 18<_habnabit18>	mogad0n, you can put a def inside your `def remind` and then pass that function to _add
T 1600580670 18<_habnabit18>	mogad0n, or remind can call self._echoReminder itself
T 1600580684 18<_habnabit18>	mogad0n, i can't quite trace the flow here and you've elided some of the functions
T 1600580698 18<mogad0n18>	hmm hold up
T 1600580800 18<mogad0n18>	I am adding a remind command which is just text based reminders into this https://github.com/mogad0n/Limnoria/blob/testing/plugins/Scheduler/plugin.py
T 1600580851 18<mogad0n18>	this is where im at https://bpa.st/EUTQ
T 1600580876 18<_habnabit18>	mogad0n, https://bpa.st/INJA
T 1600580905 18<_habnabit18>	mogad0n, oh no it uses pickle :(
T 1600580930 18<mogad0n18>	_restoreEvents() needs to be able to call it
T 1600580968 18<mogad0n18>	i dont want to add a separate _remind()
T 1600581090 18<mogad0n18>	i already got it working but im trying to write less code to do the same stuff http://ix.io/2yb0
T 1600581140 18<mogad0n18>	wait i forget if thats the same as the working copy
T 1600581422 18<Aryan18>	https://asciinema.org/a/WDBgvzUoPx2NxrzWk8v7m9flB
T 1600581480 18<_habnabit18>	Aryan, is that a question?
T 1600581494 18<_habnabit18>	Aryan, oh, i see you typed it
T 1600581498 18<_habnabit18>	Aryan, looks like a vim question
T 1600581557 18<Aryan18>	_habnabit: and a vim 'jedi' plugin
T 1600581579 18<Aryan18>	why is it so untidy?
T 1600581739 18<dassouki18>	if a user enters 30, how can i return 'low'. Should i flip the keys and values? i'd like to keep it stored in a dict but not crucial.
T 1600581742 18<dassouki18>	a = {'low': 0, 'med': 50, 'high': 100}
T 1600581766 18<dassouki18>	or is this inerpolation wiht strings?
T 1600582145 18<han-solo18>	dassouki: would you be able to change/modify `a` ?
T 1600582197 18<dassouki18>	han-solo: for now yes, but not in the future as the ral data structure is Codition = {'cat_1': a, 'cat_2': somethin_similar_to_a, etc. }
T 1600582208 18<han-solo18>	otherwise you'd have to `next(x for x,y in sorted(a.items(), key=lambda x: x[1], reverse=True) if y <= INPUT)` # i guess
T 1600582210 18<dassouki18>	but yes, i can change them
T 1600582227 18<han-solo18>	so these values represent range, i'm thinking ?
T 1600582244 18<_habnabit18>	dassouki, that doesn't seem like a case where you'd use a dict at all
T 1600582260 18<dassouki18>	han-solo: well there are a bunch of categories ,that are inputed by the user, i'm returning them as dicts,, then i compare the data to the user ranges and return "categories
T 1600582269 18<dassouki18>	_habnabit: i'm ok to changing the data
T 1600582277 18<dassouki18>	would rather do it right
T 1600582689 18<Evidlo18>	can anyone explain why this breaks when I uncomment lines 7 and 8? https://l.termbin.com/rnow
T 1600582766 18<Evidlo18>	https://l.termbin.com/wwp3g
T 1600583043 18<_habnabit18>	Evidlo, i'm not sure what you mean by "breaks" or "doesn't show up" in this case. is what you want to be able to interactively simulate input to that particular process
T 1600583076 18<Evidlo18>	I'm trying to understand why subprocessing dmenu specifically breaks pynput
T 1600583083 18<Evidlo18>	the final string doesn't show up in my terminal
T 1600583098 18<matsaman18>	it might be the other way around
T 1600583108 18<_habnabit18>	Evidlo, what is your goal?
T 1600583145 18<Evidlo18>	do get the string 'this was typed by pynput' to be typed out when lines 7 and 8 are uncommented
T 1600583155 18<Evidlo18>	to*
T 1600583161 18<Evidlo18>	and understand why its not working currently
T 1600583167 18<_habnabit18>	Evidlo, what does 'typed out' mean? are you trying to send input to dmenu?
T 1600583190 18<matsaman18>	Evidlo: does _anything_ execute after you run dmenu?
T 1600583195 18<Evidlo18>	no, this are snippets I've taken from a larger program and I've boiled it down to a minimum set of lines
T 1600583221 18<Evidlo18>	the dmenu subprocess is not supposed to do anything here, it just causes the bug to appear
T 1600583237 18<_habnabit18>	Evidlo, what are you trying to send that keyboard input to?
T 1600583277 18<Evidlo18>	it just gets typed out in X11?  are you asking what the full program does?
T 1600583309 18<_habnabit18>	Evidlo, i'm asking what you want to receive that keyboard input
T 1600583333 18<_habnabit18>	Evidlo, dmenu? the terminal emulator? some other child process?
T 1600583353 18<Evidlo18>	whatever desktop application currently has focus.  thats just what pynput does
T 1600583384 18<Evidlo18>	I'm not trying to achieve some programmatic goal here.  I've identified a bug in my program that I can't figure out and I've boiled it down to these lines
T 1600583388 18<matsaman18>	Evidlo: it's not running anything after those lines
T 1600583408 18<_habnabit18>	Evidlo, yes, well, i can't figure out what you're even saying the bug is
T 1600583438 18<Evidlo18>	if you comment out lines 7 and 8, the snippe works fine and I see 'this was typed by pynput' in my terminal (because it has focus)
T 1600583450 18<matsaman18>	Evidlo: either you're misunderstanding what .communicate() does or what dmenu does, or both
T 1600583470 18<_habnabit18>	Evidlo, so, you have some other program in focus that isn't the terminal emulator, and it receives the typed input 'normally'?
T 1600583530 18<Evidlo18>	I really don't think its relevant here, but this is the program the snippet was taken from : http://github.com/evidlo/passhole
T 1600583555 18<Evidlo18>	its a password manager that can type out passwords into a focused application via pynput
T 1600583562 18<matsaman18>	Evidlo: probably that program wasn't using a GUI app like dmenu
T 1600583582 18<Evidlo18>	you guys are kind of missing the point here
T 1600583604 18<_habnabit18>	Evidlo, yes, that's why we're asking clarifying questions :)
T 1600583648 18<Evidlo18>	well just know that the snippet doesn't seem to do anything useful because I've removed anything irrelevant
T 1600583667 18<Evidlo18>	thats why the call to communicate is empty
T 1600583714 18<_habnabit18>	Evidlo, are you sure that your code reaches L12 at all?
T 1600583720 18<_habnabit18>	Evidlo, did you ass a print after L8?
T 1600583722 18<_habnabit18>	add
T 1600583745 18<Evidlo18>	are you looking at my second paste?  there is a print statement on line 10
T 1600583754 18<Evidlo18>	I see it in both cases
T 1600583774 18<matsaman18>	Evidlo: looking at passhole, .communicate() is used only on failure
T 1600583781 18<_habnabit18>	Evidlo, and if you put a print at the end of the file?
T 1600583785 18<matsaman18>	oh whoops no it isn't, excuse me
T 1600583822 18<matsaman18>	the Popen ars are slightly different
T 1600583846 18<Evidlo18>	_habnabit: yes, I added a print and it reaches the end of the program in both cases
T 1600583867 18<_habnabit18>	Evidlo, what if you Popen dmenu but don't set stdin=
T 1600583902 18<Evidlo18>	then the program just blocks and I don't even see dmenu show up
T 1600583922 18<_habnabit18>	Evidlo, what does the code look like in that case
T 1600583971 18<Evidlo18>	https://termbin.com/345l
T 1600584226 18<_habnabit18>	Evidlo, so i don't know X11 very well but from looking over dmenu's source i'm going to guess that it grabbed the keyboard focus and whatever you expected to have the keyboard focus hasn't taken it back by the time you try typing
T 1600584258 18<_habnabit18>	Evidlo, what if you add a time.sleep(5) and click on whatever after dmenu exits? i bet it'll type in that case
T 1600584321 18<Evidlo18>	I just tried it, and no difference
T 1600584328 18<Evidlo18>	right after .communicate()
T 1600584408 18<_habnabit18>	Evidlo, you're clicking the mouse?
T 1600584416 18<dassouki18>	maybe, i'm a bit confused, but how do I use pandas loc or iloc to return a value at column 'a' and row 'b'
T 1600584436 18<Evidlo18>	yes I'm giving the focus to my terminal after dmenu exits
T 1600584531 18<_habnabit18>	Evidlo, i don't think this is a python issue, but i don't know enough about X events to debug any more
T 1600584538 18<han-solo18>	dassouki: all rows ?
T 1600584546 18<dassouki18>	no just hte single value
T 1600584550 18<han-solo18>	oh, col a and row b
T 1600584553 18<dassouki18>	correct
T 1600584565 18<han-solo18>	`df.loc['b', 'a']`
T 1600584571 18<dassouki18>	so column "age" and row "han-solo", return 94,432
T 1600584572 18<dassouki18>	hahaha
T 1600584576 18<dassouki18>	sorry 1 am here
T 1600584643 18<Evidlo18>	well thanks anyway
T 1600584649 18<Evidlo18>	maybe I'll file a pynput issue
T 1600584663 18<_habnabit18>	Evidlo, i doubt it's a pynput issue either
T 1600584681 18<Evidlo18>	a support question
T 1600584884 18<matsaman18>	anyway, if it doesn't happen in passhole, then you haven't copied the code accurately enough
T 1600585115 18<Evidlo18>	it does happen in passhole.  I wouldn't be here otherwise
T 1600585233 18<dassouki18>	han-solo: i got a key error, eventhough df.columns showing hte key .. KeyError: 'hci_asp_art' ............ Index(['age', 'hci_asp_art', 'hci_asp_col', 'hci_chip_col', 'hci_chip_loc'], dtype='object')
T 1600585261 18<matsaman18>	Evidlo: right, so you haven't copied passhole's code accurately enough
T 1600585297 18<Evidlo18>	I don't follow your logic.  I successfully replicated the bug in my snippet
T 1600585304 18<kingsley18>	Do you happen to know how to concatenate all column names of a pandas data frame into a long string, separated by commas?
T 1600585324 18<han-solo18>	kingsley: ', '.join(df.columns)` ?
T 1600585368 18<kingsley18>	han-solo: Sweet! Thank you very much!
T 1600585372 18<BT4018>	python -m src/ortealbilling
T 1600585373 18<BT4018>	               gives error ImportError: No module named gi
T 1600585373 18<BT4018>	       Seems it is running as python2.7 instead of pytnon 3. If i run it as  python3 -m src/ortealbilling, it gives error /usr/bin/python3: No module named src/ortealbilling
T 1600585376 18<BT4018>	please guide
T 1600585400 18<han-solo18>	dassouki: can we see the `df.head()` ?
T 1600585400 18<_habnabit18>	BT40, -m doesn't take a path
T 1600585441 18<han-solo18>	dassouki: and what exactly you ran
T 1600585489 18<BT4018>	how shall i run it , please guide.     i wanna run ortealbilling.py file  src folder                    Also src folder is declared as module as it contains __init__.py
T 1600585517 18<_habnabit18>	BT40, you can do `-m src.ortealbilling` but it's strange to have a package named 'src'
T 1600585613 18<BT4018>	thanks habnabit. i have another packages/folders in src folder. i tought __init__.py needs to be in mail folder also. Should i remove init.py from src?
T 1600585626 18<BT4018>	thought
T 1600585678 18<_habnabit18>	BT40, having a directory named 'src' is common but it _contains_ a package. it isn't itself a package
T 1600585727 18<dassouki18>	han-solo: fixed!
T 1600585758 18<han-solo18>	👍
T 1600585777 18<han-solo18>	what was the problem though ?
T 1600585820 18<BT4018>	https://imgur.com/a/oWEg6h4               Here is my tree. Some source files are in src folder, some structured in sub folder.
T 1600585858 18<BT4018>	now should i declare packages, i mean which one to declare as package, which one not
T 1600585864 18<BT4018>	now=how
T 1600586226 18<dassouki18>	han-solo: i flipped 'b' and 'a' and it worked
T 1600588774 18<perdent18>	How would you decode this Cistercian Monk Numerals cipher from this image programtically? https://imgur.com/lWxfMHf https://www.dcode.fr/cistercian-numbers
T 1600589895 18*	aypea[1] gives up installing pyforms. keep getting errors and the errors provide no useful information.
T 1600590040 18<supakeen18>	perdent: Dunno, if they are always the correct format and as pretty as those in the image a bounding box and some matrix comparisons might be enough, otherwise you'll need something else.
T 1600590072 18<perdent18>	supakeen: i got it
T 1600590527 18<graingert18>	BT40: you've got a __init__.py in src
T 1600590538 18<BT4018>	yes
T 1600590540 18<graingert18>	That means src. is a package
T 1600590546 18<graingert18>	That's not idiomatic
T 1600590561 18<BT4018>	okay, removed
T 1600590570 18<graingert18>	BT40: you could rename src
T 1600590592 18<BT4018>	sure,
T 1600590593 18<graingert18>	BT40: eg rename src to pybillings
T 1600590595 18<BT4018>	thanks
T 1600590662 18<graingert18>	Then run it with python -m pybillings.guimainwin
T 1600590677 18<graingert18>	You'll need to switch your imports to the new package name
T 1600590763 18<graingert18>	BT40: is this a codebase where you collaborate with others?
T 1600591479 18<BT4018>	graingert, not yet, but i am developing this as open source, so in future it will be open for collab
T 1600591521 18<BT4018>	graingert,  python -m pybillings.guimainwin   gives error because it opens that with pythoon2 instead of python 3. I use python3 libraries
T 1600591611 18<BT4018>	it gives error gi module not found, which i think is installed in python 3
T 1600591703 18<perdent18>	Why am I getting this error? and how do I fix it? https://pastebin.com/AydznSNY
T 1600591704 18<infobob18>	https://bpaste.net/X5GQ (repasted for perdent)
T 1600591845 18<_habnabit18>	perdent, you're running python 3.6+ code on python 3.5-
T 1600591897 18<perdent18>	Python 3.5.2
T 1600591902 18<perdent18>	is verion i have
T 1600591915 18<_habnabit18>	perdent, yep. the code requires a newer python
T 1600591921 18<perdent18>	_habnabit: how would i fix it?
T 1600591927 18<_habnabit18>	perdent, install a newer python
T 1600591938 18<perdent18>	what command?
T 1600591950 18<_habnabit18>	perdent, entirely depends on your OS
T 1600591954 18<perdent18>	ubuntu
T 1600592004 18<_habnabit18>	perdent, ok, then pyenv or the deadsnakes ppa
T 1600592048 18<perdent18>	_habnabit: pyenv-update ?
T 1600592071 18<_habnabit18>	perdent, no
T 1600592512 18<graingert18>	BT40: use a virtual environment
T 1600592647 18<graingert18>	perdent: you can use deadszznakes
T 1600592659 18<graingert18>	deadsnakes ppa
T 1600592675 18<graingert18>	BT40: https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa
T 1600592678 18<graingert18>	rage
T 1600592682 18<graingert18>	perdent: https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa
T 1600592692 18<graingert18>	BT40: sorry I didn't mean to send that url to you
T 1600592930 18<graingert18>	BT40: what's your OS?
T 1600593084 18<graingert18>	BT40: the "gi" library is called pygobject on pypi, you can install it as long as you have the development libraries installed: cairo2 dev girepository (dev) and gir for gtk3.0 (dev)
T 1600593107 18<graingert18>	BT40: I think your screenshot shows fedora
T 1600595652 18<Ox032F18>	Hi, is there some generic factory that creates a `codecs.IncrementalEncoder` from a `codecs.Codec.encode` function?
T 1600596214 18<spinningCat18>	if images's content is same totally can i determine that in python?
T 1600596286 18<spinningCat18>	are*
T 1600596295 18<cluelessperson18>	anyone here familiar with micropython?
T 1600596317 18<cluelessperson18>	spinningCat, you can compare the image binary data.
T 1600596326 18<cluelessperson18>	spinningCat, or you can hash the image
T 1600596345 18<spinningCat18>	like check the rgb array of images?
T 1600596351 18<cluelessperson18>	spinningCat, for non-security things, md5s can be used, if you want secure, sha256 is fine
T 1600596362 18<cluelessperson18>	spinningCat, what do you mean check the rgb array?
T 1600596385 18<spinningCat18>	reading images with imread and check if the arrays are identical
T 1600596394 18<cluelessperson18>	spinningCat, Most of the time, images are stored in a "lossy" format that doesn't store data as RGB values.
T 1600596405 18<spinningCat18>	even png
T 1600596407 18<cluelessperson18>	spinningCat, compare the arrays?
T 1600596410 18<spinningCat18>	?
T 1600596426 18<spinningCat18>	it has rgb channels right
T 1600596429 18<cluelessperson18>	spinningCat, I believe png is "lossless", and does not throw away information, so in theory RGB values should always remain the same.
T 1600596464 18<spinningCat18>	well i want to check two images content one of the is compressed more and reduce dimension
T 1600596557 18<cluelessperson18>	spinningCat, first guess is to open the images and compare RGB values.
T 1600596580 18<cluelessperson18>	spinningCat, if you're looking for lossy vs lossless comparison, it'll probably require something a bit more special
T 1600596794 18<cluelessperson18>	spinningCat, well, I forget exactly how the im library handles arrays, but I think it was numpy?   I believe it supports converting the data to a buffer, or working on raw values, or hashing the values, or just outright comparisons?
T 1600596810 18<spinningCat18>	numpy yeah
T 1600596817 18<spinningCat18>	imread is from opencv
T 1600596830 18<spinningCat18>	cluelessperson,  i am gonna check
T 1600596866 18<cluelessperson18>	spinningCat, oh, so numpy uses an underlying buffer it seems, and you can just hash that data.
T 1600597254 18<spinningCat18>	cluelessperson,  I see
T 1600597298 18<supakeen18>	cluelessperson: I am.
T 1600597369 18<cluelessperson18>	supakeen, sup
T 1600597412 18<cluelessperson18>	supakeen, oh, I'm having difficulty importing modules in micropython.   I wrote some simple stuff that while it works in the repl interpreter over serial, trying to import it from the serial console fails?
T 1600597426 18<BT4018>	graingert, ubuntu
T 1600597430 18<cluelessperson18>	supakeen, a super simple module test2.py with def foo: print("bar")  works.
T 1600597440 18<graingert18>	BT40: ok great
T 1600597443 18<cluelessperson18>	supakeen, but test1.py  fails
T 1600597478 18<supakeen18>	cluelessperson: micropython has no current directory, where are you placing these.
T 1600597498 18<graingert18>	BT40: you can use pygobject https://stackoverflow.com/a/37648798/833093
T 1600597517 18<cluelessperson18>	supakeen, uh,  ESP32 presents a REPL terminal over serial.   It's cwd is /flash
T 1600597532 18<cluelessperson18>	sys.path yields ["/", "/flash", "/flash/lib"]
T 1600597605 18<supakeen18>	Well sys.path works the 'same' as cpython in that regard, so putting anything in those places would make them importable what those paths map to on your device though I dunno.
T 1600597623 18<cluelessperson18>	supakeen, os.listdir()  shows  test1.py
T 1600597636 18<cluelessperson18>	test1.py main.py boot.py test2.py
T 1600597648 18<cluelessperson18>	(although main.py/boot.py don't exist, I think they're templated by the firmware)
T 1600597653 18<graingert18>	BT40: sudo apt install libcairo2-dev libgirepository1.0-dev gir1.2-gtk-3.0; python3.8 -m venv path/to/your/project/.venv; path/to/your/project/.venv/bin/python -m pip install pygobject
T 1600597745 18<cluelessperson18>	supakeen, so micropython wiki says importing fails silently
T 1600597775 18<supakeen18>	I'm not familiar with the specific import mechanics MicroPython performs; when I did my imports they worked.
T 1600597803 18<supakeen18>	But this was also ~4 years ago and I assume MicroPython has evolved since then.
T 1600597913 18<graingert18>	BT40: then when you do `. path/to/your/project/.venv/bin/activate` you'll be able to use `python -m pybillings.guimainwin`
T 1600597923 18<graingert18>	BT40: let me know how it goes
T 1600597939 18<graingert18>	supakeen: it's forked into pycopy too
T 1600598030 18<supakeen18>	I let go of the idea of running micropython quite early into my start in this area.
T 1600598077 18<graingert18>	just wait for the raspberry pi to be cost-reduced into that space
T 1600598100 18<supakeen18>	No, as in, there's little library support compared to other ways of doing this.
T 1600598132 18<graingert18>	other ways?
T 1600598147 18<supakeen18>	platformio/arduino
T 1600598213 18<graingert18>	"use a proper systems programming language"?
T 1600598236 18<supakeen18>	That has little to do with it, it's mostly you probably don't want to write everything yourself and the ecosystem for those two is much larger.
T 1600598277 18<supakeen18>	Most of the boards I use day to day have *plenty* of space anyways.
T 1600598392 18<supakeen18>	Like, you're probably already dealing with your serial connection that you soldered together yourself giving you too many garbage in the data and you then don't want to also implement DSMR yourself in Python because there's no library for it.
T 1600598398 18<supakeen18>	* much
T 1600601400 18<sine018>	If I am using a venv for my pip (which has been very helpful) and I have to sys.path.append() some libs elsewhere, if some of those external libs have debs from my venv pip, will they be able to access them, from the confines of my venv script.py
T 1600601420 18<sine018>	debs > deps
T 1600601431 18<TheWild18>	hello
T 1600601442 18<sine018>	is it me your looking for?
T 1600601473 18<TheWild18>	>>> sqlite3.__path__
T 1600601473 18<TheWild18>	['/usr/lib/python3.6/sqlite3']
T 1600601473 18<TheWild18>	but there's only compiled code under that path. Is my installation broken?
T 1600601497 18<ChrisWarrick18>	sine0: do not use sys.path anywhere
T 1600601509 18<ChrisWarrick18>	TheWild: why do you believe it’s broken? if it works, it works
T 1600601531 18<fujisan18>	ChrisWarrick:
T 1600601533 18<TheWild18>	it works, but I just wanted to look inside to check something and to my surprise there was no source code
T 1600601536 18<fujisan18>	oops sorry
T 1600601542 18<fujisan18>	was testing tabcompletion
T 1600601592 18<fujisan18>	can anyone help me please im looking for good books on codingconcepts and Python any suggestions are welcome, many thanks in advance?
T 1600601616 18<fujisan18>	i have a budget from work so i really want to get some books
T 1600601699 18<TheWild18>	>>> import _sqlite3
T 1600601699 18<TheWild18>	>>> _sqlite3.__path__
T 1600601699 18<TheWild18>	[...]
T 1600601699 18<TheWild18>	AttributeError: module '_sqlite3' has no attribute '__path__'
T 1600601703 18<ChrisWarrick18>	TheWild: your distro might be compiling stuff, or storing it somewhere else, and most of the interesting parts of sqlite3 are in the _sqlite3 extension module
T 1600601707 18<TheWild18>	okay, so... is this compiled into the python?
T 1600601731 18<Yhg1s18>	TheWild: __path__ is an attribute of packages, not modules. Try __file__.
T 1600601747 18<TheWild18>	>>> _sqlite3.__file__
T 1600601747 18<TheWild18>	'/usr/lib/python3.6/lib-dynload/_sqlite3.cpython-36m-x86_64-linux-gnu.so'
T 1600601765 18<TheWild18>	yeah, now it's apparent
T 1600601786 18<TheWild18>	thanks ChrisWarrick, Yhg1s
T 1600602152 18<TheWild18>	is there a mechanism for multiple `with`s without so many nestings?
T 1600602229 18<wyoung18>	TheWild: create a new with class that combinds multiple with objects
T 1600602275 18<han-solo18>	contextlib might have something
T 1600602303 18<ChrisWarrick18>	TheWild: with a, b, c:
T 1600602303 18<han-solo18>	https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack # ?
T 1600602319 18<han-solo18>	or that
T 1600602426 18<TheWild18>	oh good, thanks ChrisWarrick. Works... or at least doesn't throw a syntax error.
T 1600602446 18<TheWild18>	han-solo: and thank you too, that might be useful as well
T 1600602476 18<TheWild18>	I'm opening one sqlite3 database, another sqlite3 database, a file, another file and my code gets messy
T 1600602769 18<fujisan18>	where can i find the Python docs in simple english?
T 1600602776 18<fujisan18>	i mean international english
T 1600602788 18<fujisan18>	english for the rest of the world of non native english speakers?
T 1600602797 18<ChrisWarrick18>	there is no such thing, at least not official
T 1600602859 18<fujisan18>	but i have had english for many years in school and some of the documentation was hard to read
T 1600602876 18<supakeen18>	There are some projects that translate the documentation into various native languages.
T 1600602879 18<fujisan18>	shouldnt it be a guideline to make it more accessable
T 1600602894 18<supakeen18>	But your best bet is, if you can, to make pull requests or try and get a few people together to make an effort to do so.
T 1600602906 18<fujisan18>	not per se translate but use language in a more userfriendly way
T 1600602916 18<fujisan18>	it was like reading the law sometimes
T 1600602927 18<supakeen18>	Technical documentation is often like that, yes.
T 1600602991 18<han-solo18>	i can see it in spanish, and french
T 1600603075 18<han-solo18>	English, Spanish, French, Japaneses, Korean, Brazilian portuguese, Simplified Chinese, Traditional Chinese
T 1600603097 18<fujisan18>	han-solo: yes i know
T 1600603101 18<ChrisWarrick18>	not all docs will be translated
T 1600603106 18<han-solo18>	mm
T 1600603122 18<fujisan18>	i google translated all documentation in dutch
T 1600603132 18<fujisan18>	i mean from english to dutch
T 1600603145 18<ChrisWarrick18>	schools don’t teach you to read technical docs in English, you might need to work on learning that on your own
T 1600603213 18<fujisan18>	https://translate.google.com/translate?hl=en&sl=auto&tl=nl&u=https%3A%2F%2Fdocs.python.org%2F3%2Ftutorial%2Fcontrolflow.html%23defining-functions&sandbox=1 it works but
T 1600603231 18<supakeen18>	It's all a bit tricky; the documentation is meant for people who already have experience with programming.
T 1600603262 18<supakeen18>	And there's an area in between 'we write it in an understandable way' and 'we are leaving out details / simplifying'.
T 1600603263 18<fujisan18>	the level of English needed to understand technical documentation exceeds by miles what i learned in school English wise at college level
T 1600603286 18<supakeen18>	I doubt that fujisan, since I'm also Dutch and I was perfectly capable of reading documentation.
T 1600603290 18<fujisan18>	supakeen: yeah true
T 1600603294 18<nedbat18>	fujisan: can you give us an example of a sentence like that?
T 1600603306 18<supakeen18>	With just high school English. The fact that you have to employ "begrijpend lezen" is true and the difficult part :)
T 1600603342 18<fujisan18>	supakeen: isnt it strange though Python was a dutch invention but we have documentation in Dutch?
T 1600603349 18<fujisan18>	no*
T 1600603355 18<fujisan18>	nedbat: i can do that
T 1600603390 18<ChrisWarrick18>	if you can find enough Dutch speakers willing to translate the docs, a Dutch translation can happen
T 1600603432 18<GreenBean18>	fujisan: The Dutch generally speak English quite well, and the language of science and engineering is generally English
T 1600603456 18<GreenBean18>	Slavic speakers tend to have a harder time with English, because our language is so incomprehensible to them
T 1600603482 18<ChrisWarrick18>	[citation needed]
T 1600603523 18<fujisan18>	if the Chinese and Indians follow that logic we will need to learn Indian and Chinese very soonish :) @ GreenBean
T 1600603570 18<GreenBean18>	citation about what ChrisWarrick ?
T 1600603584 18<ChrisWarrick18>	the Slavic part
T 1600603588 18<GreenBean18>	fujisan: I don't follow
T 1600603615 18<GreenBean18>	fujisan: English is an official language of India, and many Chinese in academic and engineering circles speak English
T 1600603633 18<GreenBean18>	ChrisWarrick: Slavic languages are radically different from western European languages
T 1600603653 18<fujisan18>	GreenBean: i mean what is normal now can change what if they decide to not do it in English anymore
T 1600603655 18<ChrisWarrick18>	GreenBean: I’m a native speaker of Polish and I don’t think we have any large problems with English.
T 1600603681 18<fujisan18>	ChrisWarrick: i dont have a problem with English either just with technical documentation English
T 1600603688 18<fujisan18>	i think it’s a subset in its own right
T 1600603706 18<fujisan18>	maybe it’s the abstract nature of some of it
T 1600603708 18<GreenBean18>	I lived in Poland for a number of years and yes, there is a noticable lack of English language knowledge vs. a country such as Germany
T 1600603719 18<ChrisWarrick18>	in older people and smaller towns, sure
T 1600603729 18<GreenBean18>	Gdynia is a small town?
T 1600603738 18<GreenBean18>	That's where I lived
T 1600603743 18<Tankburn18>	anyone good hear with regular expressions?
T 1600603746 18<GreenBean18>	I usually spoke Polish or Russian :)
T 1600603759 18<fujisan18>	nedbat:  an example: “ Abstract base classes complement https://docs.python.org/3/glossary.html#term-duck-typing by providing a way to define interfaces when other techniques like https://docs.python.org/3/library/functions.html#hasattr would be clumsy or subtly wrong (for example with https://docs.python.org/3/reference/datamodel.html#special-lookup). “
T 1600603771 18<fujisan18>	oops sorry about those hyperlinks
T 1600603774 18<fujisan18>	i pasted it wrong
T 1600603781 18<ChrisWarrick18>	GreenBean: the age thing is important too, Russian was the main foreign language taught in schools until the 90s
T 1600603801 18<GreenBean18>	Yes, this is true
T 1600603815 18<GreenBean18>	I'm not saying Poles are stupid, I'm just saying that Dutch is much closer to English
T 1600603820 18<supakeen18>	fujisan: I've been (semi) active in the Spanish translation of the documentation and it's a *huge* effort to not just translate the documentation but then keep it up to date afterwards.
T 1600603827 18<GreenBean18>	So it's natural that almost all Dutch speak English rather well
T 1600603830 18<supakeen18>	Which is why there's likely so few.
T 1600603849 18<fujisan18>	i guess i should just upgrade my level of comprehension English wise
T 1600603862 18<fujisan18>	there are books for it
T 1600603874 18<fujisan18>	to read technical docs better
T 1600603884 18<GreenBean18>	It's useful
T 1600603891 18<GreenBean18>	Google Translate works rather well these days too
T 1600603903 18<GreenBean18>	R.I.P. professional translators
T 1600603903 18<fujisan18>	yeah i used it as well to translate it to dutch
T 1600603907 18<fujisan18>	that helped a lot as well
T 1600603939 18<supakeen18>	It is indeed (sadly) easier to upgrade your English understanding than to try and get other-language documentation projects off the ground
T 1600603955 18<fujisan18>	supakeen: but is it fun to do that
T 1600603967 18<fujisan18>	i would like that as well perhaps translate the documentation
T 1600603972 18<fujisan18>	some basic parts of it
T 1600603993 18<fujisan18>	supakeen: how does wikipedia do it then?
T 1600604019 18<rockyrock18>	hi all, I'm trying to scrap this page https://www.hurriyetemlak.com/satilik ... but once you request it you get "Checking your browser before accessing hurriyetemlak.com." and after 5 seconds, you get the content. I thought this is a redirect so I simply tried requests.get(url, headers=headers, allow_redirects=True, timeout=10).text ... but this doesn't work. It's always returning the html page of "Checking your
T 1600604019 18<rockyrock18>	 hurriyetemlak.com.". Can anyone help me identify what's happening there?
T 1600604075 18<supakeen18>	fujisan: If you get into the technical documentation parts of Wikipedia (look up some Computer Science terms) you'll see that those articles are much less expansive.
T 1600604115 18<supakeen18>	And while it's a great goal, it's hard to find both contributors and you're always fighting the fact that the canonical documentation keeps getting expanded/updated
T 1600604131 18<supakeen18>	It is of course possible :)
T 1600604203 18<graingert18>	rockyrock: https://support.cloudflare.com/hc/en-us/articles/200170086-Understanding-the-Cloudflare-Browser-Integrity-Check
T 1600604444 18<fujisan18>	supakeen: yeah and things change as well like today i discovered i18n was placed somewhere else in pygal
T 1600604641 18<rockyrock18>	graingert: thanks man
T 1600604652 18<graingert18>	rockyrock: https://blog.cloudflare.com/when-the-bad-guys-name-malware-after-you-you/
T 1600604769 18<graingert18>	rockyrock: there's a python tool to download the challenge code and execute it in nodejs
T 1600604773 18<nedbat18>	fujisan: I guess a simpler way to write that would be: "Abstract base classes work well with duck typing. They provide a way to define interfaces when other techniques like hasattr would be clumsy or wrong."   But I don't know if that helps
T 1600604809 18<graingert18>	nedbat: fujisan: it doesn't help that this space is under active change - eg typing.Protocol
T 1600604868 18<fujisan18>	nedbat: yeah thanks it was just an example i never heard about ducktyping until yesterday
T 1600604891 18<fujisan18>	and it has magical methods and hashable in the same sentence ;)
T 1600604896 18<fujisan18>	coding is the new magic
T 1600604938 18<fujisan18>	in my case it’s a jargon thing as well
T 1600604949 18<fujisan18>	+ the abstractness
T 1600604962 18<fujisan18>	and then a little panic when i dont get it
T 1600604993 18<nedbat18>	yes, it's difficult.  Duck typing is a specialized term, they can't get away from that
T 1600604998 18<graingert18>	also that documentation seems wrong to me, https://www.python.org/dev/peps/pep-0544/#rationale-and-goals
T 1600605001 18<rockyrock18>	graingert: you mean? https://github.com/Anorov/cloudflare-scrape
T 1600605012 18<rockyrock18>	graingert: i just tried it and if failed :(
T 1600605018 18<rockyrock18>	*it
T 1600605020 18<graingert18>	according to pep 544 abcs *don't* support duck typing!
T 1600605290 18<graingert18>	fujisan: looking at that in the glossary I have no idea in what way abcs complement duck-typing
T 1600605318 18<nedbat18>	graingert: "They provide a way to define interfaces when other techniques like hasattr would be clumsy or wrong" ?
T 1600605345 18<graingert18>	but not a duck typed interface (without a subclass hook)
T 1600605385 18<nedbat18>	right, which is why it's complement rather than extend
T 1609963182 19*	Now talking on 22#python
T 1609963182 22*	Topic for 22#python is: Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu
T 1609963182 22*	Topic for 22#python set by 26nedbat!~nedbat@python/psf/nedbat (24Wed Aug 19 16:18:59 2020)
T 1609963195 18<SnoopJ18>	I don't really know why you'd be using these functions simultaneously though. Either you know the step you want and use arange(), or you know the number of data points you want, and you use linspace()
T 1609963301 18<Pi-sistance18>	I wanted S to be parts of z , say points 2 to 4 or whatever. so arrange wont work on elements of an array then? If so i thought I would get an error message
T 1609963353 18<SnoopJ18>	if you want points 2 to 4 not-inclusive, pass z[4] instead of z[3]
T 1609963431 18<Pi-sistance18>	Yes, but s only became z[1]
T 1609963461 18<SnoopJ18>	Pi-sistance, the default step for arange() is 1
T 1609963471 18<SnoopJ18>	z[1] + 1 is smaller than z[4]
T 1609963476 18<SnoopJ18>	err, larger, sorry
T 1609963502 18<steveoh18>	q
T 1609963817 18<Pi-sistance18>	Ok, I understand I cant use it the way I thought, thanks
T 1609963853 18<Pi-sistance18>	obviously I should just splice the array anyway, just curious about something that should have been obvious again damnit
T 1609963991 18<SnoopJ18>	as I said, usually you use one or another of these, using both is very unusual
T 1609964761 18<luni18>	hi all... sorry for the trivial question: which library is "recommended" to plot UML diagrams ? thanks
T 1609965044 18<SnoopJ18>	luni, https://pypi.org/project/graphviz/ is well-liked.
T 1609965098 18<luni18>	ok thankyou
T 1609965667 18<Pi-sistance18>	If I write a function and write return yadda, and then on the next line return, somethign else, will it just return the last thing I asked it too?
T 1609965687 18<redsh18>	The first return will end execution.
T 1609965691 18<redsh18>	Of the function.
T 1609965699 18<ddavis18>	first return will end the function
T 1609965854 18<Pi-sistance18>	oh. ok thanks
T 1609966215 18<redsh18>	You can, however, yield from a generator multiple times.
T 1609966420 18<thereisnotime18>	I am wondering if I should rewrite a personal project from python 3.8 to micropython. It is for some IoT stuff and uses only serial reader, requests json , schedule, pynmea and psutil. Can you guys give advice if it feasable in MP? My goals is to reduce my docker image from ~300 mb to maybe 20-30
T 1609966448 18<_habnabit18>	thereisnotime, people use micropython in docker?
T 1609966476 18<Pi-sistance18>	if I return and use a comma inbetween commands, does the function return a list?
T 1609966488 18<_habnabit18>	Pi-sistance, `return 1, 2` returns a tuple
T 1609966506 18<thereisnotime18>	<_habnabit "notime_, people use micropython "> yep, its really small
T 1609966525 18<Pi-sistance18>	ohh, tuples. I need to learn about tuples. oh right thats why its rounded brackets, thanks
T 1609966564 18<grym18>	Pi-sistance: a tuple is a list you can't add or remove things from, or reorder
T 1609966583 18<Pi-sistance18>	ah, gaoddamn it
T 1609966588 18<_habnabit18>	thereisnotime, i see. i didn't know that micropython was usable from something other than a SOC system
T 1609966594 18<Pi-sistance18>	but I can copy its elements
T 1609966604 18<Pi-sistance18>	and do what i want with them i suppose
T 1609966610 18<_habnabit18>	thereisnotime, you're strictly trying to reduce docker image size?
T 1609966611 18<grym18>	and you can make a new tuple with all of the stuff from the old one, plus some other things
T 1609966618 18<grym18>	Pi-sistance: everything i just said is true about strings, too
T 1609966627 18<grym18>	the property is "immutability"
T 1609966633 18<thereisnotime18>	<_habnabit "notime_, i see. i didn't know th"> I am going to run it on a raspberry so it is pretty close lol
T 1609966635 18<redsh18>	Pi-sistance: If you specifically want a list, then you can just `return [var1, var2]`?
T 1609966641 18<xuxx_18>	can I import like that : import (os, sys) ?
T 1609966655 18<grym18>	xuxx_: you can; it isn't recommended
T 1609966661 18<xuxx_18>	grym: why ?
T 1609966663 18<_habnabit18>	thereisnotime, micropython in docker is pretty far from the kind of SOC i'm talking about
T 1609966663 18<redsh18>	xuxx_: If you drop the ()
T 1609966688 18<xuxx_18>	I have like 10 import isn't it easier to use () and jump line at eahc import ?
T 1609966708 18<redsh18>	This is Python, not Go.
T 1609966714 18<grym18>	xuxx_: https://www.python.org/dev/peps/pep-0008/#id23
T 1609966719 18<thereisnotime18>	<_habnabit "notime_, micropython in docker i"> i know but adds a lot of value to the project
T 1609966720 18<xuxx_18>	Better an import for each module ?
T 1609966737 18<_habnabit18>	thereisnotime, docker does or micropython does?
T 1609966741 18<grym18>	xuxx_: from root import (foo, bar, baz, ...) is fine. but not `import (root1, root2)~
T 1609966776 18<grym18>	xuxx_: so anyway the answer to why is "pep 8 says no"
T 1609966911 18<thereisnotime18>	<_habnabit "notime_, docker does or micropyt"> both I would say - docker with easy upgrading of components of the whole system (running in containers) and micropython will ensure that these components are really small
T 1609966972 18<_habnabit18>	thereisnotime, if you have multiple python containers running in docker, you don't pay that 300MB cost for each of them. docker images stack and the images/containers will share most of their earlier layers
T 1609966992 18<_habnabit18>	thereisnotime, so, just having small images in the absolute isn't super necessary
T 1609967085 18<Pi-sistance18>	well my function returned a tuple, and i wanted the function to add the elements together, so I wrapped it in sum() and I got a numpy.float64 object is not iterable
T 1609967111 18<_habnabit18>	Pi-sistance, you did sum(5)
T 1609967114 18<_habnabit18>	Pi-sistance, so it wasn't a uple
T 1609967133 18<purplex8818>	can i never call a function defined before i call it?
T 1609967150 18<_habnabit18>	purplex88, lexically? you can. chronologically? you can't
T 1609967157 18<Pi-sistance18>	_habnabit: huh? I just googled and it says you can sum tuples with sum command
T 1609967157 18<thereisnotime18>	<_habnabit "notime_, if you have multiple py"> Yes, but other problem is updating - everything is done via 3G and traffic quickly grows
T 1609967167 18<_habnabit18>	Pi-sistance, it wasn't a tuple
T 1609967170 18<SnoopJ18>	purplex88, `name()` won't be a valid call if `name` doesn't point to a callable thing.
T 1609967190 18<Pi-sistance18>	well the other guy said it returned a tuple
T 1609967191 18<_habnabit18>	thereisnotime, the size of the updates would be the same on both
T 1609967197 18<_habnabit18>	Pi-sistance, well, python said it didn't
T 1609967201 18<Pi-sistance18>	if I use sum in a function is it not yet a tuple
T 1609967209 18<purplex8818>	i have def func(..) later in py file, but i call it before
T 1609967218 18<thereisnotime18>	<_habnabit "notime_, the size of the updates"> because of the layers?
T 1609967223 18<_habnabit18>	thereisnotime, yep
T 1609967228 18<Pi-sistance18>	do I have to use sum outside the function with the result?
T 1609967241 18<_habnabit18>	Pi-sistance, show us the code you're talking about
T 1609967242 18<SnoopJ18>	purplex88, if the name does not resolve at runtime, it will be a NameError. Whether or not that happens depends on the particular code.
T 1609967260 18<thereisnotime18>	<_habnabit "notime_, yep"> good point
T 1609967270 18<cyphase18>	purplex88, it's possible to call a function on a line that precedes the line on which the function is defined; but the function definition must have been called by that time
T 1609967313 18<thereisnotime18>	I am simulating a /dev/GPRS device with socat, when I cat the device, all the data looks 1:1 with the physical one, but when I use serial.readline from python, somehow it does not read the data, can anyone give advice on that?
T 1609967327 18<purplex8818>	whats lexical vs chronological def of function?
T 1609967358 18<Pi-sistance18>	https://bpa.st/H66A
T 1609967360 18<purplex8818>	i don't have any class just functions in .py file
T 1609967399 18<SnoopJ18>	purplex88, a name can be used in the definition of a function/class before the name resolves to something, because it doesn't need to resolve at definition time.
T 1609967403 18<Pi-sistance18>	_habnabit:  it returned what I expected before I wrappedd it in a sum
T 1609967429 18<_habnabit18>	Pi-sistance, what was it before?
T 1609967431 18<Pi-sistance18>	a tuple I think, with curved brackets
T 1609967440 18<Pi-sistance18>	ill print it exactly
T 1609967441 18<_habnabit18>	Pi-sistance, i mean pastebin the old code
T 1609967463 18<cyphase18>	purplex88, def f(): g(); def g(): ...;   the function f(), which calls g(), is defined before g. but that's okay, as long as you only call f() after g has been defined
T 1609967536 18<Pi-sistance18>	yephttps://bpa.st/
T 1609967542 18<SnoopJ18>	purplex88, here's an annotated example of what cyphase is suggesting: http://ix.io/2L68
T 1609967554 18<Pi-sistance18>	_habnabit: the output i pasted at the end
T 1609967571 18<Pi-sistance18>	only code change was the sum()
T 1609967583 18<cyphase18>	thanks for not being lazy SnoopJ :)
T 1609967598 18<SnoopJ18>	purplex88, and for good measure, here's what f() compiles to: http://ix.io/2L69  Notice the LOAD_GLOBAL, which is is saying "go look up whatever the name g means"
T 1609967647 18<Deyaa18>	Is mongodb good for storing files?
T 1609967672 18<Deyaa18>	Through FileField
T 1609967693 18<purplex8818>	yes i see so rule is we can't call whats not seen by python, but we can call what will be called later. interesting example
T 1609967713 18<_habnabit18>	Pi-sistance, you're calling this as `sum(1, 2)` and that isn't how you call sum
T 1609967726 18<_habnabit18>	Pi-sistance, normally you use + if you have two items
T 1609967727 18<purplex8818>	i java/c++ i could declare a function and call but define later
T 1609967765 18<_habnabit18>	purplex88, java doesn't have or need forward declarations
T 1609967772 FiSHLiM plugin unloaded
