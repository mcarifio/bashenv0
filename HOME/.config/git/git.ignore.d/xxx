i = $(info $(1): $($(1)))
_here := $(realpath $(lastword $(MAKEFILE_LIST)))
$(call i,_here)
TARGET := $(_here)/ignore
$(call i,TARGET)
ROOT := $(_here)
$(call i,ROOT)
RELROOT := $(basename $(ROOT))
$(call i,RELROOT)
CONFIG_TREE := $(shell find $(RELROOT) -name \*.config -type f)
$(call i,CONFIG_TREE)
BANNER := Rebuilding manifest.config with $(ROOT)/$(MAKE)
$(call i,BANNER)

# make -B will force a build
$(TARGET) : $(CONFIG_TREE)
	test -f $@ || mv --backup=numbered --update $@ .attic/ || true	
	echo "# $(BANNER) on $$(date -I)\n[$$USER.$@]\n    generated = '$$(date)'\n    [$$USER.$@.$(RELROOT)]\n        path = '$(ROOT)/$@'\n\n[include]" > $(TARGET)
	for p in $(CONFIG_TREE); do echo "    path = $${p}"; done >> $(TARGET)
	echo "\n# eof" >> $(TARGET)

BANNER := Rebuilding $(TARGET) with $(ROOT)/$(MAKE)

# make -B will force a build
$(TARGET) : $(CONFIG_TREE)
	test -f $@ || mv --backup=numbered --update $@ .attic/ || true
	echo "# $(BANNER) on $$(date)\n" > $(TARGET)
	for p in $(CONFIG_TREE); do echo "#* $${p}"; cat $$p; echo "#* $${p} eof\n\n"; done >> $(TARGET)
	echo "\n# eof" >> $(TARGET)
	ln -srfTv ignore $(RELROOT)/../../ignore
	realpath $(ROOT)/../../ignore
